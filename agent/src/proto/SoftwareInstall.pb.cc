// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SoftwareInstall.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SoftwareInstall.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace fiberhome {
namespace fums {
namespace proto {
class SoftwareDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SoftwareData>
     _instance;
} _SoftwareData_default_instance_;
class CtrlSoftwareStatusResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CtrlSoftwareStatusResponse>
     _instance;
} _CtrlSoftwareStatusResponse_default_instance_;

namespace protobuf_SoftwareInstall_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareData, uniqueid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareData, softwarectrlid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareData, softwaretype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareData, apptypecode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareData, softwareversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareData, softwarectrltype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareData, softwarectrlobject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareData, args_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlSoftwareStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlSoftwareStatusResponse, uniqueid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlSoftwareStatusResponse, ctrltype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlSoftwareStatusResponse, swapptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlSoftwareStatusResponse, apptypecode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlSoftwareStatusResponse, swappversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlSoftwareStatusResponse, apptryinstallingstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlSoftwareStatusResponse, apptryinstallingfailedreason_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(SoftwareData)},
  { 13, -1, sizeof(CtrlSoftwareStatusResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SoftwareData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CtrlSoftwareStatusResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "SoftwareInstall.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::com::fiberhome::fums::proto::protobuf_CommonDefine_2eproto::InitDefaults();
  _SoftwareData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SoftwareData_default_instance_);_CtrlSoftwareStatusResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CtrlSoftwareStatusResponse_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025SoftwareInstall.proto\022\030com.fiberhome.f"
      "ums.proto\032\022CommonDefine.proto\"\360\002\n\014Softwa"
      "reData\022\020\n\010uniqueId\030\001 \001(\003\022\026\n\016softwareCtrl"
      "Id\030\002 \001(\005\022\024\n\014softwareType\030\003 \001(\t\022I\n\013appTyp"
      "eCode\030\004 \001(\01624.com.fiberhome.fums.proto.E"
      "numDefineData.AppTypeEnum\022\027\n\017softwareVer"
      "sion\030\005 \001(\t\022U\n\020softwareCtrlType\030\006 \001(\0162;.c"
      "om.fiberhome.fums.proto.SoftwareData.Sof"
      "twareCtrlTypeEnum\022\032\n\022softwareCtrlObject\030"
      "\007 \001(\t\022\014\n\004args\030\010 \001(\t\";\n\024SoftwareCtrlTypeE"
      "num\022\014\n\010DOWNLOAD\020\000\022\013\n\007INSTALL\020\001\022\010\n\004INIT\020\002"
      "\"\357\002\n\032CtrlSoftwareStatusResponse\022\020\n\010uniqu"
      "eId\030\001 \001(\003\022M\n\010ctrlType\030\002 \001(\0162;.com.fiberh"
      "ome.fums.proto.SoftwareData.SoftwareCtrl"
      "TypeEnum\022\021\n\tswAppType\030\003 \001(\t\022I\n\013appTypeCo"
      "de\030\004 \001(\01624.com.fiberhome.fums.proto.Enum"
      "DefineData.AppTypeEnum\022\024\n\014swAppVersion\030\005"
      " \001(\t\022V\n\026appTryInstallingStatus\030\006 \001(\01626.c"
      "om.fiberhome.fums.proto.CommonResponse.R"
      "esStatusEnum\022$\n\034appTryInstallingFailedRe"
      "ason\030\007 \001(\tB+\n\030com.fiberhome.fums.protoB\017"
      "SoftwareInstallb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 863);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SoftwareInstall.proto", &protobuf_RegisterTypes);
  ::com::fiberhome::fums::proto::protobuf_CommonDefine_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_SoftwareInstall_2eproto

const ::google::protobuf::EnumDescriptor* SoftwareData_SoftwareCtrlTypeEnum_descriptor() {
  protobuf_SoftwareInstall_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SoftwareInstall_2eproto::file_level_enum_descriptors[0];
}
bool SoftwareData_SoftwareCtrlTypeEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SoftwareData_SoftwareCtrlTypeEnum SoftwareData::DOWNLOAD;
const SoftwareData_SoftwareCtrlTypeEnum SoftwareData::INSTALL;
const SoftwareData_SoftwareCtrlTypeEnum SoftwareData::INIT;
const SoftwareData_SoftwareCtrlTypeEnum SoftwareData::SoftwareCtrlTypeEnum_MIN;
const SoftwareData_SoftwareCtrlTypeEnum SoftwareData::SoftwareCtrlTypeEnum_MAX;
const int SoftwareData::SoftwareCtrlTypeEnum_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SoftwareData::kUniqueIdFieldNumber;
const int SoftwareData::kSoftwareCtrlIdFieldNumber;
const int SoftwareData::kSoftwareTypeFieldNumber;
const int SoftwareData::kAppTypeCodeFieldNumber;
const int SoftwareData::kSoftwareVersionFieldNumber;
const int SoftwareData::kSoftwareCtrlTypeFieldNumber;
const int SoftwareData::kSoftwareCtrlObjectFieldNumber;
const int SoftwareData::kArgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SoftwareData::SoftwareData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SoftwareInstall_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.fiberhome.fums.proto.SoftwareData)
}
SoftwareData::SoftwareData(const SoftwareData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  softwaretype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.softwaretype().size() > 0) {
    softwaretype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.softwaretype_);
  }
  softwareversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.softwareversion().size() > 0) {
    softwareversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.softwareversion_);
  }
  softwarectrlobject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.softwarectrlobject().size() > 0) {
    softwarectrlobject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.softwarectrlobject_);
  }
  args_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.args().size() > 0) {
    args_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.args_);
  }
  ::memcpy(&uniqueid_, &from.uniqueid_,
    static_cast<size_t>(reinterpret_cast<char*>(&softwarectrltype_) -
    reinterpret_cast<char*>(&uniqueid_)) + sizeof(softwarectrltype_));
  // @@protoc_insertion_point(copy_constructor:com.fiberhome.fums.proto.SoftwareData)
}

void SoftwareData::SharedCtor() {
  softwaretype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  softwareversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  softwarectrlobject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  args_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uniqueid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&softwarectrltype_) -
      reinterpret_cast<char*>(&uniqueid_)) + sizeof(softwarectrltype_));
  _cached_size_ = 0;
}

SoftwareData::~SoftwareData() {
  // @@protoc_insertion_point(destructor:com.fiberhome.fums.proto.SoftwareData)
  SharedDtor();
}

void SoftwareData::SharedDtor() {
  softwaretype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  softwareversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  softwarectrlobject_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  args_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SoftwareData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SoftwareData::descriptor() {
  protobuf_SoftwareInstall_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SoftwareInstall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SoftwareData& SoftwareData::default_instance() {
  protobuf_SoftwareInstall_2eproto::InitDefaults();
  return *internal_default_instance();
}

SoftwareData* SoftwareData::New(::google::protobuf::Arena* arena) const {
  SoftwareData* n = new SoftwareData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SoftwareData::Clear() {
// @@protoc_insertion_point(message_clear_start:com.fiberhome.fums.proto.SoftwareData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  softwaretype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  softwareversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  softwarectrlobject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  args_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uniqueid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&softwarectrltype_) -
      reinterpret_cast<char*>(&uniqueid_)) + sizeof(softwarectrltype_));
  _internal_metadata_.Clear();
}

bool SoftwareData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.fiberhome.fums.proto.SoftwareData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 uniqueId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uniqueid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 softwareCtrlId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &softwarectrlid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string softwareType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_softwaretype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->softwaretype().data(), static_cast<int>(this->softwaretype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.fiberhome.fums.proto.SoftwareData.softwareType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.fiberhome.fums.proto.EnumDefineData.AppTypeEnum appTypeCode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_apptypecode(static_cast< ::com::fiberhome::fums::proto::EnumDefineData_AppTypeEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string softwareVersion = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_softwareversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->softwareversion().data(), static_cast<int>(this->softwareversion().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.fiberhome.fums.proto.SoftwareData.softwareVersion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.fiberhome.fums.proto.SoftwareData.SoftwareCtrlTypeEnum softwareCtrlType = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_softwarectrltype(static_cast< ::com::fiberhome::fums::proto::SoftwareData_SoftwareCtrlTypeEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string softwareCtrlObject = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_softwarectrlobject()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->softwarectrlobject().data(), static_cast<int>(this->softwarectrlobject().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.fiberhome.fums.proto.SoftwareData.softwareCtrlObject"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string args = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_args()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->args().data(), static_cast<int>(this->args().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.fiberhome.fums.proto.SoftwareData.args"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.fiberhome.fums.proto.SoftwareData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.fiberhome.fums.proto.SoftwareData)
  return false;
#undef DO_
}

void SoftwareData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.fiberhome.fums.proto.SoftwareData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 uniqueId = 1;
  if (this->uniqueid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->uniqueid(), output);
  }

  // int32 softwareCtrlId = 2;
  if (this->softwarectrlid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->softwarectrlid(), output);
  }

  // string softwareType = 3;
  if (this->softwaretype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->softwaretype().data(), static_cast<int>(this->softwaretype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.SoftwareData.softwareType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->softwaretype(), output);
  }

  // .com.fiberhome.fums.proto.EnumDefineData.AppTypeEnum appTypeCode = 4;
  if (this->apptypecode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->apptypecode(), output);
  }

  // string softwareVersion = 5;
  if (this->softwareversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->softwareversion().data(), static_cast<int>(this->softwareversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.SoftwareData.softwareVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->softwareversion(), output);
  }

  // .com.fiberhome.fums.proto.SoftwareData.SoftwareCtrlTypeEnum softwareCtrlType = 6;
  if (this->softwarectrltype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->softwarectrltype(), output);
  }

  // string softwareCtrlObject = 7;
  if (this->softwarectrlobject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->softwarectrlobject().data(), static_cast<int>(this->softwarectrlobject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.SoftwareData.softwareCtrlObject");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->softwarectrlobject(), output);
  }

  // string args = 8;
  if (this->args().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->args().data(), static_cast<int>(this->args().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.SoftwareData.args");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->args(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.fiberhome.fums.proto.SoftwareData)
}

::google::protobuf::uint8* SoftwareData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.fiberhome.fums.proto.SoftwareData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 uniqueId = 1;
  if (this->uniqueid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->uniqueid(), target);
  }

  // int32 softwareCtrlId = 2;
  if (this->softwarectrlid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->softwarectrlid(), target);
  }

  // string softwareType = 3;
  if (this->softwaretype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->softwaretype().data(), static_cast<int>(this->softwaretype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.SoftwareData.softwareType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->softwaretype(), target);
  }

  // .com.fiberhome.fums.proto.EnumDefineData.AppTypeEnum appTypeCode = 4;
  if (this->apptypecode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->apptypecode(), target);
  }

  // string softwareVersion = 5;
  if (this->softwareversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->softwareversion().data(), static_cast<int>(this->softwareversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.SoftwareData.softwareVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->softwareversion(), target);
  }

  // .com.fiberhome.fums.proto.SoftwareData.SoftwareCtrlTypeEnum softwareCtrlType = 6;
  if (this->softwarectrltype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->softwarectrltype(), target);
  }

  // string softwareCtrlObject = 7;
  if (this->softwarectrlobject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->softwarectrlobject().data(), static_cast<int>(this->softwarectrlobject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.SoftwareData.softwareCtrlObject");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->softwarectrlobject(), target);
  }

  // string args = 8;
  if (this->args().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->args().data(), static_cast<int>(this->args().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.SoftwareData.args");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->args(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.fiberhome.fums.proto.SoftwareData)
  return target;
}

size_t SoftwareData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.fiberhome.fums.proto.SoftwareData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string softwareType = 3;
  if (this->softwaretype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->softwaretype());
  }

  // string softwareVersion = 5;
  if (this->softwareversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->softwareversion());
  }

  // string softwareCtrlObject = 7;
  if (this->softwarectrlobject().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->softwarectrlobject());
  }

  // string args = 8;
  if (this->args().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->args());
  }

  // int64 uniqueId = 1;
  if (this->uniqueid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->uniqueid());
  }

  // int32 softwareCtrlId = 2;
  if (this->softwarectrlid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->softwarectrlid());
  }

  // .com.fiberhome.fums.proto.EnumDefineData.AppTypeEnum appTypeCode = 4;
  if (this->apptypecode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->apptypecode());
  }

  // .com.fiberhome.fums.proto.SoftwareData.SoftwareCtrlTypeEnum softwareCtrlType = 6;
  if (this->softwarectrltype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->softwarectrltype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SoftwareData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.fiberhome.fums.proto.SoftwareData)
  GOOGLE_DCHECK_NE(&from, this);
  const SoftwareData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SoftwareData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.fiberhome.fums.proto.SoftwareData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.fiberhome.fums.proto.SoftwareData)
    MergeFrom(*source);
  }
}

void SoftwareData::MergeFrom(const SoftwareData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.fiberhome.fums.proto.SoftwareData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.softwaretype().size() > 0) {

    softwaretype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.softwaretype_);
  }
  if (from.softwareversion().size() > 0) {

    softwareversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.softwareversion_);
  }
  if (from.softwarectrlobject().size() > 0) {

    softwarectrlobject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.softwarectrlobject_);
  }
  if (from.args().size() > 0) {

    args_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.args_);
  }
  if (from.uniqueid() != 0) {
    set_uniqueid(from.uniqueid());
  }
  if (from.softwarectrlid() != 0) {
    set_softwarectrlid(from.softwarectrlid());
  }
  if (from.apptypecode() != 0) {
    set_apptypecode(from.apptypecode());
  }
  if (from.softwarectrltype() != 0) {
    set_softwarectrltype(from.softwarectrltype());
  }
}

void SoftwareData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.fiberhome.fums.proto.SoftwareData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SoftwareData::CopyFrom(const SoftwareData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.fiberhome.fums.proto.SoftwareData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SoftwareData::IsInitialized() const {
  return true;
}

void SoftwareData::Swap(SoftwareData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SoftwareData::InternalSwap(SoftwareData* other) {
  using std::swap;
  softwaretype_.Swap(&other->softwaretype_);
  softwareversion_.Swap(&other->softwareversion_);
  softwarectrlobject_.Swap(&other->softwarectrlobject_);
  args_.Swap(&other->args_);
  swap(uniqueid_, other->uniqueid_);
  swap(softwarectrlid_, other->softwarectrlid_);
  swap(apptypecode_, other->apptypecode_);
  swap(softwarectrltype_, other->softwarectrltype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SoftwareData::GetMetadata() const {
  protobuf_SoftwareInstall_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SoftwareInstall_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SoftwareData

// int64 uniqueId = 1;
void SoftwareData::clear_uniqueid() {
  uniqueid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 SoftwareData::uniqueid() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.SoftwareData.uniqueId)
  return uniqueid_;
}
void SoftwareData::set_uniqueid(::google::protobuf::int64 value) {
  
  uniqueid_ = value;
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.SoftwareData.uniqueId)
}

// int32 softwareCtrlId = 2;
void SoftwareData::clear_softwarectrlid() {
  softwarectrlid_ = 0;
}
::google::protobuf::int32 SoftwareData::softwarectrlid() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.SoftwareData.softwareCtrlId)
  return softwarectrlid_;
}
void SoftwareData::set_softwarectrlid(::google::protobuf::int32 value) {
  
  softwarectrlid_ = value;
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.SoftwareData.softwareCtrlId)
}

// string softwareType = 3;
void SoftwareData::clear_softwaretype() {
  softwaretype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SoftwareData::softwaretype() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.SoftwareData.softwareType)
  return softwaretype_.GetNoArena();
}
void SoftwareData::set_softwaretype(const ::std::string& value) {
  
  softwaretype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.SoftwareData.softwareType)
}
#if LANG_CXX11
void SoftwareData::set_softwaretype(::std::string&& value) {
  
  softwaretype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fiberhome.fums.proto.SoftwareData.softwareType)
}
#endif
void SoftwareData::set_softwaretype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  softwaretype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fiberhome.fums.proto.SoftwareData.softwareType)
}
void SoftwareData::set_softwaretype(const char* value, size_t size) {
  
  softwaretype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fiberhome.fums.proto.SoftwareData.softwareType)
}
::std::string* SoftwareData::mutable_softwaretype() {
  
  // @@protoc_insertion_point(field_mutable:com.fiberhome.fums.proto.SoftwareData.softwareType)
  return softwaretype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SoftwareData::release_softwaretype() {
  // @@protoc_insertion_point(field_release:com.fiberhome.fums.proto.SoftwareData.softwareType)
  
  return softwaretype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SoftwareData::set_allocated_softwaretype(::std::string* softwaretype) {
  if (softwaretype != NULL) {
    
  } else {
    
  }
  softwaretype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), softwaretype);
  // @@protoc_insertion_point(field_set_allocated:com.fiberhome.fums.proto.SoftwareData.softwareType)
}

// .com.fiberhome.fums.proto.EnumDefineData.AppTypeEnum appTypeCode = 4;
void SoftwareData::clear_apptypecode() {
  apptypecode_ = 0;
}
::com::fiberhome::fums::proto::EnumDefineData_AppTypeEnum SoftwareData::apptypecode() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.SoftwareData.appTypeCode)
  return static_cast< ::com::fiberhome::fums::proto::EnumDefineData_AppTypeEnum >(apptypecode_);
}
void SoftwareData::set_apptypecode(::com::fiberhome::fums::proto::EnumDefineData_AppTypeEnum value) {
  
  apptypecode_ = value;
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.SoftwareData.appTypeCode)
}

// string softwareVersion = 5;
void SoftwareData::clear_softwareversion() {
  softwareversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SoftwareData::softwareversion() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.SoftwareData.softwareVersion)
  return softwareversion_.GetNoArena();
}
void SoftwareData::set_softwareversion(const ::std::string& value) {
  
  softwareversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.SoftwareData.softwareVersion)
}
#if LANG_CXX11
void SoftwareData::set_softwareversion(::std::string&& value) {
  
  softwareversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fiberhome.fums.proto.SoftwareData.softwareVersion)
}
#endif
void SoftwareData::set_softwareversion(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  softwareversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fiberhome.fums.proto.SoftwareData.softwareVersion)
}
void SoftwareData::set_softwareversion(const char* value, size_t size) {
  
  softwareversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fiberhome.fums.proto.SoftwareData.softwareVersion)
}
::std::string* SoftwareData::mutable_softwareversion() {
  
  // @@protoc_insertion_point(field_mutable:com.fiberhome.fums.proto.SoftwareData.softwareVersion)
  return softwareversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SoftwareData::release_softwareversion() {
  // @@protoc_insertion_point(field_release:com.fiberhome.fums.proto.SoftwareData.softwareVersion)
  
  return softwareversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SoftwareData::set_allocated_softwareversion(::std::string* softwareversion) {
  if (softwareversion != NULL) {
    
  } else {
    
  }
  softwareversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), softwareversion);
  // @@protoc_insertion_point(field_set_allocated:com.fiberhome.fums.proto.SoftwareData.softwareVersion)
}

// .com.fiberhome.fums.proto.SoftwareData.SoftwareCtrlTypeEnum softwareCtrlType = 6;
void SoftwareData::clear_softwarectrltype() {
  softwarectrltype_ = 0;
}
::com::fiberhome::fums::proto::SoftwareData_SoftwareCtrlTypeEnum SoftwareData::softwarectrltype() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.SoftwareData.softwareCtrlType)
  return static_cast< ::com::fiberhome::fums::proto::SoftwareData_SoftwareCtrlTypeEnum >(softwarectrltype_);
}
void SoftwareData::set_softwarectrltype(::com::fiberhome::fums::proto::SoftwareData_SoftwareCtrlTypeEnum value) {
  
  softwarectrltype_ = value;
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.SoftwareData.softwareCtrlType)
}

// string softwareCtrlObject = 7;
void SoftwareData::clear_softwarectrlobject() {
  softwarectrlobject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SoftwareData::softwarectrlobject() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.SoftwareData.softwareCtrlObject)
  return softwarectrlobject_.GetNoArena();
}
void SoftwareData::set_softwarectrlobject(const ::std::string& value) {
  
  softwarectrlobject_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.SoftwareData.softwareCtrlObject)
}
#if LANG_CXX11
void SoftwareData::set_softwarectrlobject(::std::string&& value) {
  
  softwarectrlobject_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fiberhome.fums.proto.SoftwareData.softwareCtrlObject)
}
#endif
void SoftwareData::set_softwarectrlobject(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  softwarectrlobject_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fiberhome.fums.proto.SoftwareData.softwareCtrlObject)
}
void SoftwareData::set_softwarectrlobject(const char* value, size_t size) {
  
  softwarectrlobject_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fiberhome.fums.proto.SoftwareData.softwareCtrlObject)
}
::std::string* SoftwareData::mutable_softwarectrlobject() {
  
  // @@protoc_insertion_point(field_mutable:com.fiberhome.fums.proto.SoftwareData.softwareCtrlObject)
  return softwarectrlobject_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SoftwareData::release_softwarectrlobject() {
  // @@protoc_insertion_point(field_release:com.fiberhome.fums.proto.SoftwareData.softwareCtrlObject)
  
  return softwarectrlobject_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SoftwareData::set_allocated_softwarectrlobject(::std::string* softwarectrlobject) {
  if (softwarectrlobject != NULL) {
    
  } else {
    
  }
  softwarectrlobject_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), softwarectrlobject);
  // @@protoc_insertion_point(field_set_allocated:com.fiberhome.fums.proto.SoftwareData.softwareCtrlObject)
}

// string args = 8;
void SoftwareData::clear_args() {
  args_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SoftwareData::args() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.SoftwareData.args)
  return args_.GetNoArena();
}
void SoftwareData::set_args(const ::std::string& value) {
  
  args_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.SoftwareData.args)
}
#if LANG_CXX11
void SoftwareData::set_args(::std::string&& value) {
  
  args_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fiberhome.fums.proto.SoftwareData.args)
}
#endif
void SoftwareData::set_args(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  args_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fiberhome.fums.proto.SoftwareData.args)
}
void SoftwareData::set_args(const char* value, size_t size) {
  
  args_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fiberhome.fums.proto.SoftwareData.args)
}
::std::string* SoftwareData::mutable_args() {
  
  // @@protoc_insertion_point(field_mutable:com.fiberhome.fums.proto.SoftwareData.args)
  return args_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SoftwareData::release_args() {
  // @@protoc_insertion_point(field_release:com.fiberhome.fums.proto.SoftwareData.args)
  
  return args_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SoftwareData::set_allocated_args(::std::string* args) {
  if (args != NULL) {
    
  } else {
    
  }
  args_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), args);
  // @@protoc_insertion_point(field_set_allocated:com.fiberhome.fums.proto.SoftwareData.args)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CtrlSoftwareStatusResponse::kUniqueIdFieldNumber;
const int CtrlSoftwareStatusResponse::kCtrlTypeFieldNumber;
const int CtrlSoftwareStatusResponse::kSwAppTypeFieldNumber;
const int CtrlSoftwareStatusResponse::kAppTypeCodeFieldNumber;
const int CtrlSoftwareStatusResponse::kSwAppVersionFieldNumber;
const int CtrlSoftwareStatusResponse::kAppTryInstallingStatusFieldNumber;
const int CtrlSoftwareStatusResponse::kAppTryInstallingFailedReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CtrlSoftwareStatusResponse::CtrlSoftwareStatusResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SoftwareInstall_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse)
}
CtrlSoftwareStatusResponse::CtrlSoftwareStatusResponse(const CtrlSoftwareStatusResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  swapptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.swapptype().size() > 0) {
    swapptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.swapptype_);
  }
  swappversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.swappversion().size() > 0) {
    swappversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.swappversion_);
  }
  apptryinstallingfailedreason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.apptryinstallingfailedreason().size() > 0) {
    apptryinstallingfailedreason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apptryinstallingfailedreason_);
  }
  ::memcpy(&uniqueid_, &from.uniqueid_,
    static_cast<size_t>(reinterpret_cast<char*>(&apptryinstallingstatus_) -
    reinterpret_cast<char*>(&uniqueid_)) + sizeof(apptryinstallingstatus_));
  // @@protoc_insertion_point(copy_constructor:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse)
}

void CtrlSoftwareStatusResponse::SharedCtor() {
  swapptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  swappversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptryinstallingfailedreason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uniqueid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&apptryinstallingstatus_) -
      reinterpret_cast<char*>(&uniqueid_)) + sizeof(apptryinstallingstatus_));
  _cached_size_ = 0;
}

CtrlSoftwareStatusResponse::~CtrlSoftwareStatusResponse() {
  // @@protoc_insertion_point(destructor:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse)
  SharedDtor();
}

void CtrlSoftwareStatusResponse::SharedDtor() {
  swapptype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  swappversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptryinstallingfailedreason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CtrlSoftwareStatusResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CtrlSoftwareStatusResponse::descriptor() {
  protobuf_SoftwareInstall_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SoftwareInstall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CtrlSoftwareStatusResponse& CtrlSoftwareStatusResponse::default_instance() {
  protobuf_SoftwareInstall_2eproto::InitDefaults();
  return *internal_default_instance();
}

CtrlSoftwareStatusResponse* CtrlSoftwareStatusResponse::New(::google::protobuf::Arena* arena) const {
  CtrlSoftwareStatusResponse* n = new CtrlSoftwareStatusResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CtrlSoftwareStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  swapptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  swappversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptryinstallingfailedreason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uniqueid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&apptryinstallingstatus_) -
      reinterpret_cast<char*>(&uniqueid_)) + sizeof(apptryinstallingstatus_));
  _internal_metadata_.Clear();
}

bool CtrlSoftwareStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 uniqueId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uniqueid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.fiberhome.fums.proto.SoftwareData.SoftwareCtrlTypeEnum ctrlType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ctrltype(static_cast< ::com::fiberhome::fums::proto::SoftwareData_SoftwareCtrlTypeEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string swAppType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_swapptype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->swapptype().data(), static_cast<int>(this->swapptype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.swAppType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.fiberhome.fums.proto.EnumDefineData.AppTypeEnum appTypeCode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_apptypecode(static_cast< ::com::fiberhome::fums::proto::EnumDefineData_AppTypeEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string swAppVersion = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_swappversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->swappversion().data(), static_cast<int>(this->swappversion().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.swAppVersion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.fiberhome.fums.proto.CommonResponse.ResStatusEnum appTryInstallingStatus = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_apptryinstallingstatus(static_cast< ::com::fiberhome::fums::proto::CommonResponse_ResStatusEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appTryInstallingFailedReason = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apptryinstallingfailedreason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->apptryinstallingfailedreason().data(), static_cast<int>(this->apptryinstallingfailedreason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.appTryInstallingFailedReason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse)
  return false;
#undef DO_
}

void CtrlSoftwareStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 uniqueId = 1;
  if (this->uniqueid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->uniqueid(), output);
  }

  // .com.fiberhome.fums.proto.SoftwareData.SoftwareCtrlTypeEnum ctrlType = 2;
  if (this->ctrltype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->ctrltype(), output);
  }

  // string swAppType = 3;
  if (this->swapptype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->swapptype().data(), static_cast<int>(this->swapptype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.swAppType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->swapptype(), output);
  }

  // .com.fiberhome.fums.proto.EnumDefineData.AppTypeEnum appTypeCode = 4;
  if (this->apptypecode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->apptypecode(), output);
  }

  // string swAppVersion = 5;
  if (this->swappversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->swappversion().data(), static_cast<int>(this->swappversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.swAppVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->swappversion(), output);
  }

  // .com.fiberhome.fums.proto.CommonResponse.ResStatusEnum appTryInstallingStatus = 6;
  if (this->apptryinstallingstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->apptryinstallingstatus(), output);
  }

  // string appTryInstallingFailedReason = 7;
  if (this->apptryinstallingfailedreason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apptryinstallingfailedreason().data(), static_cast<int>(this->apptryinstallingfailedreason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.appTryInstallingFailedReason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->apptryinstallingfailedreason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse)
}

::google::protobuf::uint8* CtrlSoftwareStatusResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 uniqueId = 1;
  if (this->uniqueid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->uniqueid(), target);
  }

  // .com.fiberhome.fums.proto.SoftwareData.SoftwareCtrlTypeEnum ctrlType = 2;
  if (this->ctrltype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->ctrltype(), target);
  }

  // string swAppType = 3;
  if (this->swapptype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->swapptype().data(), static_cast<int>(this->swapptype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.swAppType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->swapptype(), target);
  }

  // .com.fiberhome.fums.proto.EnumDefineData.AppTypeEnum appTypeCode = 4;
  if (this->apptypecode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->apptypecode(), target);
  }

  // string swAppVersion = 5;
  if (this->swappversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->swappversion().data(), static_cast<int>(this->swappversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.swAppVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->swappversion(), target);
  }

  // .com.fiberhome.fums.proto.CommonResponse.ResStatusEnum appTryInstallingStatus = 6;
  if (this->apptryinstallingstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->apptryinstallingstatus(), target);
  }

  // string appTryInstallingFailedReason = 7;
  if (this->apptryinstallingfailedreason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apptryinstallingfailedreason().data(), static_cast<int>(this->apptryinstallingfailedreason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.appTryInstallingFailedReason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->apptryinstallingfailedreason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse)
  return target;
}

size_t CtrlSoftwareStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string swAppType = 3;
  if (this->swapptype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->swapptype());
  }

  // string swAppVersion = 5;
  if (this->swappversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->swappversion());
  }

  // string appTryInstallingFailedReason = 7;
  if (this->apptryinstallingfailedreason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->apptryinstallingfailedreason());
  }

  // int64 uniqueId = 1;
  if (this->uniqueid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->uniqueid());
  }

  // .com.fiberhome.fums.proto.SoftwareData.SoftwareCtrlTypeEnum ctrlType = 2;
  if (this->ctrltype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ctrltype());
  }

  // .com.fiberhome.fums.proto.EnumDefineData.AppTypeEnum appTypeCode = 4;
  if (this->apptypecode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->apptypecode());
  }

  // .com.fiberhome.fums.proto.CommonResponse.ResStatusEnum appTryInstallingStatus = 6;
  if (this->apptryinstallingstatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->apptryinstallingstatus());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CtrlSoftwareStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CtrlSoftwareStatusResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CtrlSoftwareStatusResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse)
    MergeFrom(*source);
  }
}

void CtrlSoftwareStatusResponse::MergeFrom(const CtrlSoftwareStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.swapptype().size() > 0) {

    swapptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.swapptype_);
  }
  if (from.swappversion().size() > 0) {

    swappversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.swappversion_);
  }
  if (from.apptryinstallingfailedreason().size() > 0) {

    apptryinstallingfailedreason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apptryinstallingfailedreason_);
  }
  if (from.uniqueid() != 0) {
    set_uniqueid(from.uniqueid());
  }
  if (from.ctrltype() != 0) {
    set_ctrltype(from.ctrltype());
  }
  if (from.apptypecode() != 0) {
    set_apptypecode(from.apptypecode());
  }
  if (from.apptryinstallingstatus() != 0) {
    set_apptryinstallingstatus(from.apptryinstallingstatus());
  }
}

void CtrlSoftwareStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CtrlSoftwareStatusResponse::CopyFrom(const CtrlSoftwareStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CtrlSoftwareStatusResponse::IsInitialized() const {
  return true;
}

void CtrlSoftwareStatusResponse::Swap(CtrlSoftwareStatusResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CtrlSoftwareStatusResponse::InternalSwap(CtrlSoftwareStatusResponse* other) {
  using std::swap;
  swapptype_.Swap(&other->swapptype_);
  swappversion_.Swap(&other->swappversion_);
  apptryinstallingfailedreason_.Swap(&other->apptryinstallingfailedreason_);
  swap(uniqueid_, other->uniqueid_);
  swap(ctrltype_, other->ctrltype_);
  swap(apptypecode_, other->apptypecode_);
  swap(apptryinstallingstatus_, other->apptryinstallingstatus_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CtrlSoftwareStatusResponse::GetMetadata() const {
  protobuf_SoftwareInstall_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SoftwareInstall_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CtrlSoftwareStatusResponse

// int64 uniqueId = 1;
void CtrlSoftwareStatusResponse::clear_uniqueid() {
  uniqueid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 CtrlSoftwareStatusResponse::uniqueid() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.uniqueId)
  return uniqueid_;
}
void CtrlSoftwareStatusResponse::set_uniqueid(::google::protobuf::int64 value) {
  
  uniqueid_ = value;
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.uniqueId)
}

// .com.fiberhome.fums.proto.SoftwareData.SoftwareCtrlTypeEnum ctrlType = 2;
void CtrlSoftwareStatusResponse::clear_ctrltype() {
  ctrltype_ = 0;
}
::com::fiberhome::fums::proto::SoftwareData_SoftwareCtrlTypeEnum CtrlSoftwareStatusResponse::ctrltype() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.ctrlType)
  return static_cast< ::com::fiberhome::fums::proto::SoftwareData_SoftwareCtrlTypeEnum >(ctrltype_);
}
void CtrlSoftwareStatusResponse::set_ctrltype(::com::fiberhome::fums::proto::SoftwareData_SoftwareCtrlTypeEnum value) {
  
  ctrltype_ = value;
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.ctrlType)
}

// string swAppType = 3;
void CtrlSoftwareStatusResponse::clear_swapptype() {
  swapptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CtrlSoftwareStatusResponse::swapptype() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.swAppType)
  return swapptype_.GetNoArena();
}
void CtrlSoftwareStatusResponse::set_swapptype(const ::std::string& value) {
  
  swapptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.swAppType)
}
#if LANG_CXX11
void CtrlSoftwareStatusResponse::set_swapptype(::std::string&& value) {
  
  swapptype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.swAppType)
}
#endif
void CtrlSoftwareStatusResponse::set_swapptype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  swapptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.swAppType)
}
void CtrlSoftwareStatusResponse::set_swapptype(const char* value, size_t size) {
  
  swapptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.swAppType)
}
::std::string* CtrlSoftwareStatusResponse::mutable_swapptype() {
  
  // @@protoc_insertion_point(field_mutable:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.swAppType)
  return swapptype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CtrlSoftwareStatusResponse::release_swapptype() {
  // @@protoc_insertion_point(field_release:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.swAppType)
  
  return swapptype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CtrlSoftwareStatusResponse::set_allocated_swapptype(::std::string* swapptype) {
  if (swapptype != NULL) {
    
  } else {
    
  }
  swapptype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), swapptype);
  // @@protoc_insertion_point(field_set_allocated:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.swAppType)
}

// .com.fiberhome.fums.proto.EnumDefineData.AppTypeEnum appTypeCode = 4;
void CtrlSoftwareStatusResponse::clear_apptypecode() {
  apptypecode_ = 0;
}
::com::fiberhome::fums::proto::EnumDefineData_AppTypeEnum CtrlSoftwareStatusResponse::apptypecode() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.appTypeCode)
  return static_cast< ::com::fiberhome::fums::proto::EnumDefineData_AppTypeEnum >(apptypecode_);
}
void CtrlSoftwareStatusResponse::set_apptypecode(::com::fiberhome::fums::proto::EnumDefineData_AppTypeEnum value) {
  
  apptypecode_ = value;
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.appTypeCode)
}

// string swAppVersion = 5;
void CtrlSoftwareStatusResponse::clear_swappversion() {
  swappversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CtrlSoftwareStatusResponse::swappversion() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.swAppVersion)
  return swappversion_.GetNoArena();
}
void CtrlSoftwareStatusResponse::set_swappversion(const ::std::string& value) {
  
  swappversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.swAppVersion)
}
#if LANG_CXX11
void CtrlSoftwareStatusResponse::set_swappversion(::std::string&& value) {
  
  swappversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.swAppVersion)
}
#endif
void CtrlSoftwareStatusResponse::set_swappversion(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  swappversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.swAppVersion)
}
void CtrlSoftwareStatusResponse::set_swappversion(const char* value, size_t size) {
  
  swappversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.swAppVersion)
}
::std::string* CtrlSoftwareStatusResponse::mutable_swappversion() {
  
  // @@protoc_insertion_point(field_mutable:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.swAppVersion)
  return swappversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CtrlSoftwareStatusResponse::release_swappversion() {
  // @@protoc_insertion_point(field_release:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.swAppVersion)
  
  return swappversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CtrlSoftwareStatusResponse::set_allocated_swappversion(::std::string* swappversion) {
  if (swappversion != NULL) {
    
  } else {
    
  }
  swappversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), swappversion);
  // @@protoc_insertion_point(field_set_allocated:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.swAppVersion)
}

// .com.fiberhome.fums.proto.CommonResponse.ResStatusEnum appTryInstallingStatus = 6;
void CtrlSoftwareStatusResponse::clear_apptryinstallingstatus() {
  apptryinstallingstatus_ = 0;
}
::com::fiberhome::fums::proto::CommonResponse_ResStatusEnum CtrlSoftwareStatusResponse::apptryinstallingstatus() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.appTryInstallingStatus)
  return static_cast< ::com::fiberhome::fums::proto::CommonResponse_ResStatusEnum >(apptryinstallingstatus_);
}
void CtrlSoftwareStatusResponse::set_apptryinstallingstatus(::com::fiberhome::fums::proto::CommonResponse_ResStatusEnum value) {
  
  apptryinstallingstatus_ = value;
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.appTryInstallingStatus)
}

// string appTryInstallingFailedReason = 7;
void CtrlSoftwareStatusResponse::clear_apptryinstallingfailedreason() {
  apptryinstallingfailedreason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CtrlSoftwareStatusResponse::apptryinstallingfailedreason() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.appTryInstallingFailedReason)
  return apptryinstallingfailedreason_.GetNoArena();
}
void CtrlSoftwareStatusResponse::set_apptryinstallingfailedreason(const ::std::string& value) {
  
  apptryinstallingfailedreason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.appTryInstallingFailedReason)
}
#if LANG_CXX11
void CtrlSoftwareStatusResponse::set_apptryinstallingfailedreason(::std::string&& value) {
  
  apptryinstallingfailedreason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.appTryInstallingFailedReason)
}
#endif
void CtrlSoftwareStatusResponse::set_apptryinstallingfailedreason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  apptryinstallingfailedreason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.appTryInstallingFailedReason)
}
void CtrlSoftwareStatusResponse::set_apptryinstallingfailedreason(const char* value, size_t size) {
  
  apptryinstallingfailedreason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.appTryInstallingFailedReason)
}
::std::string* CtrlSoftwareStatusResponse::mutable_apptryinstallingfailedreason() {
  
  // @@protoc_insertion_point(field_mutable:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.appTryInstallingFailedReason)
  return apptryinstallingfailedreason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CtrlSoftwareStatusResponse::release_apptryinstallingfailedreason() {
  // @@protoc_insertion_point(field_release:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.appTryInstallingFailedReason)
  
  return apptryinstallingfailedreason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CtrlSoftwareStatusResponse::set_allocated_apptryinstallingfailedreason(::std::string* apptryinstallingfailedreason) {
  if (apptryinstallingfailedreason != NULL) {
    
  } else {
    
  }
  apptryinstallingfailedreason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apptryinstallingfailedreason);
  // @@protoc_insertion_point(field_set_allocated:com.fiberhome.fums.proto.CtrlSoftwareStatusResponse.appTryInstallingFailedReason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace fums
}  // namespace fiberhome
}  // namespace com

// @@protoc_insertion_point(global_scope)

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CtrlApp.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CtrlApp.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace fiberhome {
namespace fums {
namespace proto {
class CtrlAppDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CtrlAppData>
     _instance;
} _CtrlAppData_default_instance_;
class CtrlAppRstResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CtrlAppRstResponse>
     _instance;
} _CtrlAppRstResponse_default_instance_;

namespace protobuf_CtrlApp_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlAppData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlAppData, uniqueid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlAppData, apptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlAppData, apptypecode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlAppData, ctrltype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlAppRstResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlAppRstResponse, uniqueid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlAppRstResponse, res_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(CtrlAppData)},
  { 9, -1, sizeof(CtrlAppRstResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CtrlAppData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CtrlAppRstResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "CtrlApp.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::com::fiberhome::fums::proto::protobuf_CommonDefine_2eproto::InitDefaults();
  _CtrlAppData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CtrlAppData_default_instance_);_CtrlAppRstResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CtrlAppRstResponse_default_instance_);_CtrlAppRstResponse_default_instance_._instance.get_mutable()->res_ = const_cast< ::com::fiberhome::fums::proto::CommonResponse*>(
      ::com::fiberhome::fums::proto::CommonResponse::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rCtrlApp.proto\022\030com.fiberhome.fums.prot"
      "o\032\022CommonDefine.proto\"\217\002\n\013CtrlAppData\022\020\n"
      "\010uniqueId\030\001 \001(\003\022\017\n\007appType\030\002 \001(\t\022I\n\013appT"
      "ypeCode\030\003 \001(\01624.com.fiberhome.fums.proto"
      ".EnumDefineData.AppTypeEnum\022D\n\010ctrlType\030"
      "\004 \001(\01622.com.fiberhome.fums.proto.CtrlApp"
      "Data.CtrlTypeEnum\"L\n\014CtrlTypeEnum\022\t\n\005STA"
      "RT\020\000\022\010\n\004STOP\020\001\022\013\n\007RESTART\020\002\022\013\n\007HASTART\020\003"
      "\022\r\n\tHARESTART\020\004\"]\n\022CtrlAppRstResponse\022\020\n"
      "\010uniqueId\030\001 \001(\003\0225\n\003res\030\002 \001(\0132(.com.fiber"
      "home.fums.proto.CommonResponseB#\n\030com.fi"
      "berhome.fums.protoB\007CtrlAppb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 475);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CtrlApp.proto", &protobuf_RegisterTypes);
  ::com::fiberhome::fums::proto::protobuf_CommonDefine_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_CtrlApp_2eproto

const ::google::protobuf::EnumDescriptor* CtrlAppData_CtrlTypeEnum_descriptor() {
  protobuf_CtrlApp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CtrlApp_2eproto::file_level_enum_descriptors[0];
}
bool CtrlAppData_CtrlTypeEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CtrlAppData_CtrlTypeEnum CtrlAppData::START;
const CtrlAppData_CtrlTypeEnum CtrlAppData::STOP;
const CtrlAppData_CtrlTypeEnum CtrlAppData::RESTART;
const CtrlAppData_CtrlTypeEnum CtrlAppData::HASTART;
const CtrlAppData_CtrlTypeEnum CtrlAppData::HARESTART;
const CtrlAppData_CtrlTypeEnum CtrlAppData::CtrlTypeEnum_MIN;
const CtrlAppData_CtrlTypeEnum CtrlAppData::CtrlTypeEnum_MAX;
const int CtrlAppData::CtrlTypeEnum_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CtrlAppData::kUniqueIdFieldNumber;
const int CtrlAppData::kAppTypeFieldNumber;
const int CtrlAppData::kAppTypeCodeFieldNumber;
const int CtrlAppData::kCtrlTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CtrlAppData::CtrlAppData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CtrlApp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.fiberhome.fums.proto.CtrlAppData)
}
CtrlAppData::CtrlAppData(const CtrlAppData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  apptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.apptype().size() > 0) {
    apptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apptype_);
  }
  ::memcpy(&uniqueid_, &from.uniqueid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ctrltype_) -
    reinterpret_cast<char*>(&uniqueid_)) + sizeof(ctrltype_));
  // @@protoc_insertion_point(copy_constructor:com.fiberhome.fums.proto.CtrlAppData)
}

void CtrlAppData::SharedCtor() {
  apptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uniqueid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ctrltype_) -
      reinterpret_cast<char*>(&uniqueid_)) + sizeof(ctrltype_));
  _cached_size_ = 0;
}

CtrlAppData::~CtrlAppData() {
  // @@protoc_insertion_point(destructor:com.fiberhome.fums.proto.CtrlAppData)
  SharedDtor();
}

void CtrlAppData::SharedDtor() {
  apptype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CtrlAppData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CtrlAppData::descriptor() {
  protobuf_CtrlApp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CtrlApp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CtrlAppData& CtrlAppData::default_instance() {
  protobuf_CtrlApp_2eproto::InitDefaults();
  return *internal_default_instance();
}

CtrlAppData* CtrlAppData::New(::google::protobuf::Arena* arena) const {
  CtrlAppData* n = new CtrlAppData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CtrlAppData::Clear() {
// @@protoc_insertion_point(message_clear_start:com.fiberhome.fums.proto.CtrlAppData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uniqueid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ctrltype_) -
      reinterpret_cast<char*>(&uniqueid_)) + sizeof(ctrltype_));
  _internal_metadata_.Clear();
}

bool CtrlAppData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.fiberhome.fums.proto.CtrlAppData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 uniqueId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uniqueid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apptype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->apptype().data(), static_cast<int>(this->apptype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.fiberhome.fums.proto.CtrlAppData.appType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.fiberhome.fums.proto.EnumDefineData.AppTypeEnum appTypeCode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_apptypecode(static_cast< ::com::fiberhome::fums::proto::EnumDefineData_AppTypeEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.fiberhome.fums.proto.CtrlAppData.CtrlTypeEnum ctrlType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ctrltype(static_cast< ::com::fiberhome::fums::proto::CtrlAppData_CtrlTypeEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.fiberhome.fums.proto.CtrlAppData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.fiberhome.fums.proto.CtrlAppData)
  return false;
#undef DO_
}

void CtrlAppData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.fiberhome.fums.proto.CtrlAppData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 uniqueId = 1;
  if (this->uniqueid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->uniqueid(), output);
  }

  // string appType = 2;
  if (this->apptype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apptype().data(), static_cast<int>(this->apptype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.CtrlAppData.appType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->apptype(), output);
  }

  // .com.fiberhome.fums.proto.EnumDefineData.AppTypeEnum appTypeCode = 3;
  if (this->apptypecode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->apptypecode(), output);
  }

  // .com.fiberhome.fums.proto.CtrlAppData.CtrlTypeEnum ctrlType = 4;
  if (this->ctrltype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->ctrltype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.fiberhome.fums.proto.CtrlAppData)
}

::google::protobuf::uint8* CtrlAppData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.fiberhome.fums.proto.CtrlAppData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 uniqueId = 1;
  if (this->uniqueid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->uniqueid(), target);
  }

  // string appType = 2;
  if (this->apptype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apptype().data(), static_cast<int>(this->apptype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.CtrlAppData.appType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->apptype(), target);
  }

  // .com.fiberhome.fums.proto.EnumDefineData.AppTypeEnum appTypeCode = 3;
  if (this->apptypecode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->apptypecode(), target);
  }

  // .com.fiberhome.fums.proto.CtrlAppData.CtrlTypeEnum ctrlType = 4;
  if (this->ctrltype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->ctrltype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.fiberhome.fums.proto.CtrlAppData)
  return target;
}

size_t CtrlAppData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.fiberhome.fums.proto.CtrlAppData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string appType = 2;
  if (this->apptype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->apptype());
  }

  // int64 uniqueId = 1;
  if (this->uniqueid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->uniqueid());
  }

  // .com.fiberhome.fums.proto.EnumDefineData.AppTypeEnum appTypeCode = 3;
  if (this->apptypecode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->apptypecode());
  }

  // .com.fiberhome.fums.proto.CtrlAppData.CtrlTypeEnum ctrlType = 4;
  if (this->ctrltype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ctrltype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CtrlAppData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.fiberhome.fums.proto.CtrlAppData)
  GOOGLE_DCHECK_NE(&from, this);
  const CtrlAppData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CtrlAppData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.fiberhome.fums.proto.CtrlAppData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.fiberhome.fums.proto.CtrlAppData)
    MergeFrom(*source);
  }
}

void CtrlAppData::MergeFrom(const CtrlAppData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.fiberhome.fums.proto.CtrlAppData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.apptype().size() > 0) {

    apptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apptype_);
  }
  if (from.uniqueid() != 0) {
    set_uniqueid(from.uniqueid());
  }
  if (from.apptypecode() != 0) {
    set_apptypecode(from.apptypecode());
  }
  if (from.ctrltype() != 0) {
    set_ctrltype(from.ctrltype());
  }
}

void CtrlAppData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.fiberhome.fums.proto.CtrlAppData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CtrlAppData::CopyFrom(const CtrlAppData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.fiberhome.fums.proto.CtrlAppData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CtrlAppData::IsInitialized() const {
  return true;
}

void CtrlAppData::Swap(CtrlAppData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CtrlAppData::InternalSwap(CtrlAppData* other) {
  using std::swap;
  apptype_.Swap(&other->apptype_);
  swap(uniqueid_, other->uniqueid_);
  swap(apptypecode_, other->apptypecode_);
  swap(ctrltype_, other->ctrltype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CtrlAppData::GetMetadata() const {
  protobuf_CtrlApp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CtrlApp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CtrlAppData

// int64 uniqueId = 1;
void CtrlAppData::clear_uniqueid() {
  uniqueid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 CtrlAppData::uniqueid() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.CtrlAppData.uniqueId)
  return uniqueid_;
}
void CtrlAppData::set_uniqueid(::google::protobuf::int64 value) {
  
  uniqueid_ = value;
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.CtrlAppData.uniqueId)
}

// string appType = 2;
void CtrlAppData::clear_apptype() {
  apptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CtrlAppData::apptype() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.CtrlAppData.appType)
  return apptype_.GetNoArena();
}
void CtrlAppData::set_apptype(const ::std::string& value) {
  
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.CtrlAppData.appType)
}
#if LANG_CXX11
void CtrlAppData::set_apptype(::std::string&& value) {
  
  apptype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fiberhome.fums.proto.CtrlAppData.appType)
}
#endif
void CtrlAppData::set_apptype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fiberhome.fums.proto.CtrlAppData.appType)
}
void CtrlAppData::set_apptype(const char* value, size_t size) {
  
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fiberhome.fums.proto.CtrlAppData.appType)
}
::std::string* CtrlAppData::mutable_apptype() {
  
  // @@protoc_insertion_point(field_mutable:com.fiberhome.fums.proto.CtrlAppData.appType)
  return apptype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CtrlAppData::release_apptype() {
  // @@protoc_insertion_point(field_release:com.fiberhome.fums.proto.CtrlAppData.appType)
  
  return apptype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CtrlAppData::set_allocated_apptype(::std::string* apptype) {
  if (apptype != NULL) {
    
  } else {
    
  }
  apptype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apptype);
  // @@protoc_insertion_point(field_set_allocated:com.fiberhome.fums.proto.CtrlAppData.appType)
}

// .com.fiberhome.fums.proto.EnumDefineData.AppTypeEnum appTypeCode = 3;
void CtrlAppData::clear_apptypecode() {
  apptypecode_ = 0;
}
::com::fiberhome::fums::proto::EnumDefineData_AppTypeEnum CtrlAppData::apptypecode() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.CtrlAppData.appTypeCode)
  return static_cast< ::com::fiberhome::fums::proto::EnumDefineData_AppTypeEnum >(apptypecode_);
}
void CtrlAppData::set_apptypecode(::com::fiberhome::fums::proto::EnumDefineData_AppTypeEnum value) {
  
  apptypecode_ = value;
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.CtrlAppData.appTypeCode)
}

// .com.fiberhome.fums.proto.CtrlAppData.CtrlTypeEnum ctrlType = 4;
void CtrlAppData::clear_ctrltype() {
  ctrltype_ = 0;
}
::com::fiberhome::fums::proto::CtrlAppData_CtrlTypeEnum CtrlAppData::ctrltype() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.CtrlAppData.ctrlType)
  return static_cast< ::com::fiberhome::fums::proto::CtrlAppData_CtrlTypeEnum >(ctrltype_);
}
void CtrlAppData::set_ctrltype(::com::fiberhome::fums::proto::CtrlAppData_CtrlTypeEnum value) {
  
  ctrltype_ = value;
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.CtrlAppData.ctrlType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CtrlAppRstResponse::kUniqueIdFieldNumber;
const int CtrlAppRstResponse::kResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CtrlAppRstResponse::CtrlAppRstResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CtrlApp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.fiberhome.fums.proto.CtrlAppRstResponse)
}
CtrlAppRstResponse::CtrlAppRstResponse(const CtrlAppRstResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_res()) {
    res_ = new ::com::fiberhome::fums::proto::CommonResponse(*from.res_);
  } else {
    res_ = NULL;
  }
  uniqueid_ = from.uniqueid_;
  // @@protoc_insertion_point(copy_constructor:com.fiberhome.fums.proto.CtrlAppRstResponse)
}

void CtrlAppRstResponse::SharedCtor() {
  ::memset(&res_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uniqueid_) -
      reinterpret_cast<char*>(&res_)) + sizeof(uniqueid_));
  _cached_size_ = 0;
}

CtrlAppRstResponse::~CtrlAppRstResponse() {
  // @@protoc_insertion_point(destructor:com.fiberhome.fums.proto.CtrlAppRstResponse)
  SharedDtor();
}

void CtrlAppRstResponse::SharedDtor() {
  if (this != internal_default_instance()) delete res_;
}

void CtrlAppRstResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CtrlAppRstResponse::descriptor() {
  protobuf_CtrlApp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CtrlApp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CtrlAppRstResponse& CtrlAppRstResponse::default_instance() {
  protobuf_CtrlApp_2eproto::InitDefaults();
  return *internal_default_instance();
}

CtrlAppRstResponse* CtrlAppRstResponse::New(::google::protobuf::Arena* arena) const {
  CtrlAppRstResponse* n = new CtrlAppRstResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CtrlAppRstResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:com.fiberhome.fums.proto.CtrlAppRstResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && res_ != NULL) {
    delete res_;
  }
  res_ = NULL;
  uniqueid_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool CtrlAppRstResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.fiberhome.fums.proto.CtrlAppRstResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 uniqueId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uniqueid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.fiberhome.fums.proto.CommonResponse res = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_res()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.fiberhome.fums.proto.CtrlAppRstResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.fiberhome.fums.proto.CtrlAppRstResponse)
  return false;
#undef DO_
}

void CtrlAppRstResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.fiberhome.fums.proto.CtrlAppRstResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 uniqueId = 1;
  if (this->uniqueid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->uniqueid(), output);
  }

  // .com.fiberhome.fums.proto.CommonResponse res = 2;
  if (this->has_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->res_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.fiberhome.fums.proto.CtrlAppRstResponse)
}

::google::protobuf::uint8* CtrlAppRstResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.fiberhome.fums.proto.CtrlAppRstResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 uniqueId = 1;
  if (this->uniqueid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->uniqueid(), target);
  }

  // .com.fiberhome.fums.proto.CommonResponse res = 2;
  if (this->has_res()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->res_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.fiberhome.fums.proto.CtrlAppRstResponse)
  return target;
}

size_t CtrlAppRstResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.fiberhome.fums.proto.CtrlAppRstResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .com.fiberhome.fums.proto.CommonResponse res = 2;
  if (this->has_res()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->res_);
  }

  // int64 uniqueId = 1;
  if (this->uniqueid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->uniqueid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CtrlAppRstResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.fiberhome.fums.proto.CtrlAppRstResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CtrlAppRstResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CtrlAppRstResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.fiberhome.fums.proto.CtrlAppRstResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.fiberhome.fums.proto.CtrlAppRstResponse)
    MergeFrom(*source);
  }
}

void CtrlAppRstResponse::MergeFrom(const CtrlAppRstResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.fiberhome.fums.proto.CtrlAppRstResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_res()) {
    mutable_res()->::com::fiberhome::fums::proto::CommonResponse::MergeFrom(from.res());
  }
  if (from.uniqueid() != 0) {
    set_uniqueid(from.uniqueid());
  }
}

void CtrlAppRstResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.fiberhome.fums.proto.CtrlAppRstResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CtrlAppRstResponse::CopyFrom(const CtrlAppRstResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.fiberhome.fums.proto.CtrlAppRstResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CtrlAppRstResponse::IsInitialized() const {
  return true;
}

void CtrlAppRstResponse::Swap(CtrlAppRstResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CtrlAppRstResponse::InternalSwap(CtrlAppRstResponse* other) {
  using std::swap;
  swap(res_, other->res_);
  swap(uniqueid_, other->uniqueid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CtrlAppRstResponse::GetMetadata() const {
  protobuf_CtrlApp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CtrlApp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CtrlAppRstResponse

// int64 uniqueId = 1;
void CtrlAppRstResponse::clear_uniqueid() {
  uniqueid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 CtrlAppRstResponse::uniqueid() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.CtrlAppRstResponse.uniqueId)
  return uniqueid_;
}
void CtrlAppRstResponse::set_uniqueid(::google::protobuf::int64 value) {
  
  uniqueid_ = value;
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.CtrlAppRstResponse.uniqueId)
}

// .com.fiberhome.fums.proto.CommonResponse res = 2;
bool CtrlAppRstResponse::has_res() const {
  return this != internal_default_instance() && res_ != NULL;
}
void CtrlAppRstResponse::clear_res() {
  if (GetArenaNoVirtual() == NULL && res_ != NULL) delete res_;
  res_ = NULL;
}
const ::com::fiberhome::fums::proto::CommonResponse& CtrlAppRstResponse::res() const {
  const ::com::fiberhome::fums::proto::CommonResponse* p = res_;
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.CtrlAppRstResponse.res)
  return p != NULL ? *p : *reinterpret_cast<const ::com::fiberhome::fums::proto::CommonResponse*>(
      &::com::fiberhome::fums::proto::_CommonResponse_default_instance_);
}
::com::fiberhome::fums::proto::CommonResponse* CtrlAppRstResponse::mutable_res() {
  
  if (res_ == NULL) {
    res_ = new ::com::fiberhome::fums::proto::CommonResponse;
  }
  // @@protoc_insertion_point(field_mutable:com.fiberhome.fums.proto.CtrlAppRstResponse.res)
  return res_;
}
::com::fiberhome::fums::proto::CommonResponse* CtrlAppRstResponse::release_res() {
  // @@protoc_insertion_point(field_release:com.fiberhome.fums.proto.CtrlAppRstResponse.res)
  
  ::com::fiberhome::fums::proto::CommonResponse* temp = res_;
  res_ = NULL;
  return temp;
}
void CtrlAppRstResponse::set_allocated_res(::com::fiberhome::fums::proto::CommonResponse* res) {
  delete res_;
  res_ = res;
  if (res) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.fiberhome.fums.proto.CtrlAppRstResponse.res)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace fums
}  // namespace fiberhome
}  // namespace com

// @@protoc_insertion_point(global_scope)

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Config.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace fiberhome {
namespace fums {
namespace proto {
class ConfigDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ConfigData>
     _instance;
} _ConfigData_default_instance_;
class ConfigUpdateResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ConfigUpdateResponse>
     _instance;
} _ConfigUpdateResponse_default_instance_;

namespace protobuf_Config_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigData, uniqueid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigData, configfileno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigData, configfiletype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigData, configfilename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigData, configfilecontent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigData, updatenotifyscript_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigData, filesavepath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigData, viewconfscript_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigData, serverpath_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigUpdateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigUpdateResponse, uniqueid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigUpdateResponse, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigUpdateResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigUpdateResponse, reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigUpdateResponse, netype_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(ConfigData)},
  { 14, -1, sizeof(ConfigUpdateResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConfigData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConfigUpdateResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Config.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::com::fiberhome::fums::proto::protobuf_CommonDefine_2eproto::InitDefaults();
  _ConfigData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ConfigData_default_instance_);_ConfigUpdateResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ConfigUpdateResponse_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014Config.proto\022\030com.fiberhome.fums.proto"
      "\032\022CommonDefine.proto\"\215\003\n\nConfigData\022\020\n\010u"
      "niqueId\030\001 \001(\003\022\024\n\014configFileNo\030\002 \001(\005\022O\n\016c"
      "onfigFileType\030\003 \001(\01627.com.fiberhome.fums"
      ".proto.ConfigData.ConfigFileTypeEnum\022\026\n\016"
      "configFileName\030\004 \001(\t\022\031\n\021configFileConten"
      "t\030\005 \001(\t\022\032\n\022updateNotifyScript\030\006 \001(\t\022\024\n\014f"
      "ileSavePath\030\007 \001(\t\022\026\n\016viewConfScript\030\010 \001("
      "\t\022\022\n\nserverPath\030\t \001(\t\"u\n\022ConfigFileTypeE"
      "num\022\t\n\005AGETN\020\000\022\010\n\004APPS\020\001\022\007\n\003NTP\020\002\022\007\n\003FTP"
      "\020\003\022\007\n\003STS\020\004\022\014\n\010FTP_STSC\020\005\022\007\n\003EPG\020\006\022\n\n\006CO"
      "MMON\020\007\022\014\n\010DOWNLOAD\020\010\"\333\001\n\024ConfigUpdateRes"
      "ponse\022\020\n\010uniqueId\030\001 \001(\003\022\020\n\010fileName\030\002 \001("
      "\t\022F\n\006status\030\003 \001(\01626.com.fiberhome.fums.p"
      "roto.CommonResponse.ResStatusEnum\022\016\n\006rea"
      "son\030\004 \001(\t\022G\n\006neType\030\005 \001(\01627.com.fiberhom"
      "e.fums.proto.ConfigData.ConfigFileTypeEn"
      "umB\"\n\030com.fiberhome.fums.protoB\006Configb\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 726);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Config.proto", &protobuf_RegisterTypes);
  ::com::fiberhome::fums::proto::protobuf_CommonDefine_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_Config_2eproto

const ::google::protobuf::EnumDescriptor* ConfigData_ConfigFileTypeEnum_descriptor() {
  protobuf_Config_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Config_2eproto::file_level_enum_descriptors[0];
}
bool ConfigData_ConfigFileTypeEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ConfigData_ConfigFileTypeEnum ConfigData::AGETN;
const ConfigData_ConfigFileTypeEnum ConfigData::APPS;
const ConfigData_ConfigFileTypeEnum ConfigData::NTP;
const ConfigData_ConfigFileTypeEnum ConfigData::FTP;
const ConfigData_ConfigFileTypeEnum ConfigData::STS;
const ConfigData_ConfigFileTypeEnum ConfigData::FTP_STSC;
const ConfigData_ConfigFileTypeEnum ConfigData::EPG;
const ConfigData_ConfigFileTypeEnum ConfigData::COMMON;
const ConfigData_ConfigFileTypeEnum ConfigData::DOWNLOAD;
const ConfigData_ConfigFileTypeEnum ConfigData::ConfigFileTypeEnum_MIN;
const ConfigData_ConfigFileTypeEnum ConfigData::ConfigFileTypeEnum_MAX;
const int ConfigData::ConfigFileTypeEnum_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigData::kUniqueIdFieldNumber;
const int ConfigData::kConfigFileNoFieldNumber;
const int ConfigData::kConfigFileTypeFieldNumber;
const int ConfigData::kConfigFileNameFieldNumber;
const int ConfigData::kConfigFileContentFieldNumber;
const int ConfigData::kUpdateNotifyScriptFieldNumber;
const int ConfigData::kFileSavePathFieldNumber;
const int ConfigData::kViewConfScriptFieldNumber;
const int ConfigData::kServerPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigData::ConfigData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Config_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.fiberhome.fums.proto.ConfigData)
}
ConfigData::ConfigData(const ConfigData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  configfilename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.configfilename().size() > 0) {
    configfilename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.configfilename_);
  }
  configfilecontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.configfilecontent().size() > 0) {
    configfilecontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.configfilecontent_);
  }
  updatenotifyscript_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.updatenotifyscript().size() > 0) {
    updatenotifyscript_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.updatenotifyscript_);
  }
  filesavepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filesavepath().size() > 0) {
    filesavepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filesavepath_);
  }
  viewconfscript_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.viewconfscript().size() > 0) {
    viewconfscript_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.viewconfscript_);
  }
  serverpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.serverpath().size() > 0) {
    serverpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverpath_);
  }
  ::memcpy(&uniqueid_, &from.uniqueid_,
    static_cast<size_t>(reinterpret_cast<char*>(&configfiletype_) -
    reinterpret_cast<char*>(&uniqueid_)) + sizeof(configfiletype_));
  // @@protoc_insertion_point(copy_constructor:com.fiberhome.fums.proto.ConfigData)
}

void ConfigData::SharedCtor() {
  configfilename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  configfilecontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatenotifyscript_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filesavepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  viewconfscript_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uniqueid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&configfiletype_) -
      reinterpret_cast<char*>(&uniqueid_)) + sizeof(configfiletype_));
  _cached_size_ = 0;
}

ConfigData::~ConfigData() {
  // @@protoc_insertion_point(destructor:com.fiberhome.fums.proto.ConfigData)
  SharedDtor();
}

void ConfigData::SharedDtor() {
  configfilename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  configfilecontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatenotifyscript_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filesavepath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  viewconfscript_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverpath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigData::descriptor() {
  protobuf_Config_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Config_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigData& ConfigData::default_instance() {
  protobuf_Config_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConfigData* ConfigData::New(::google::protobuf::Arena* arena) const {
  ConfigData* n = new ConfigData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigData::Clear() {
// @@protoc_insertion_point(message_clear_start:com.fiberhome.fums.proto.ConfigData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  configfilename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  configfilecontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatenotifyscript_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filesavepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  viewconfscript_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uniqueid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&configfiletype_) -
      reinterpret_cast<char*>(&uniqueid_)) + sizeof(configfiletype_));
  _internal_metadata_.Clear();
}

bool ConfigData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.fiberhome.fums.proto.ConfigData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 uniqueId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uniqueid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 configFileNo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &configfileno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.fiberhome.fums.proto.ConfigData.ConfigFileTypeEnum configFileType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_configfiletype(static_cast< ::com::fiberhome::fums::proto::ConfigData_ConfigFileTypeEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string configFileName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_configfilename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->configfilename().data(), static_cast<int>(this->configfilename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.fiberhome.fums.proto.ConfigData.configFileName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string configFileContent = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_configfilecontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->configfilecontent().data(), static_cast<int>(this->configfilecontent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.fiberhome.fums.proto.ConfigData.configFileContent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string updateNotifyScript = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_updatenotifyscript()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->updatenotifyscript().data(), static_cast<int>(this->updatenotifyscript().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.fiberhome.fums.proto.ConfigData.updateNotifyScript"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fileSavePath = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filesavepath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filesavepath().data(), static_cast<int>(this->filesavepath().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.fiberhome.fums.proto.ConfigData.fileSavePath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string viewConfScript = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_viewconfscript()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->viewconfscript().data(), static_cast<int>(this->viewconfscript().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.fiberhome.fums.proto.ConfigData.viewConfScript"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string serverPath = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serverpath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serverpath().data(), static_cast<int>(this->serverpath().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.fiberhome.fums.proto.ConfigData.serverPath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.fiberhome.fums.proto.ConfigData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.fiberhome.fums.proto.ConfigData)
  return false;
#undef DO_
}

void ConfigData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.fiberhome.fums.proto.ConfigData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 uniqueId = 1;
  if (this->uniqueid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->uniqueid(), output);
  }

  // int32 configFileNo = 2;
  if (this->configfileno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->configfileno(), output);
  }

  // .com.fiberhome.fums.proto.ConfigData.ConfigFileTypeEnum configFileType = 3;
  if (this->configfiletype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->configfiletype(), output);
  }

  // string configFileName = 4;
  if (this->configfilename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->configfilename().data(), static_cast<int>(this->configfilename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.ConfigData.configFileName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->configfilename(), output);
  }

  // string configFileContent = 5;
  if (this->configfilecontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->configfilecontent().data(), static_cast<int>(this->configfilecontent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.ConfigData.configFileContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->configfilecontent(), output);
  }

  // string updateNotifyScript = 6;
  if (this->updatenotifyscript().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->updatenotifyscript().data(), static_cast<int>(this->updatenotifyscript().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.ConfigData.updateNotifyScript");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->updatenotifyscript(), output);
  }

  // string fileSavePath = 7;
  if (this->filesavepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filesavepath().data(), static_cast<int>(this->filesavepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.ConfigData.fileSavePath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->filesavepath(), output);
  }

  // string viewConfScript = 8;
  if (this->viewconfscript().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->viewconfscript().data(), static_cast<int>(this->viewconfscript().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.ConfigData.viewConfScript");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->viewconfscript(), output);
  }

  // string serverPath = 9;
  if (this->serverpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverpath().data(), static_cast<int>(this->serverpath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.ConfigData.serverPath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->serverpath(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.fiberhome.fums.proto.ConfigData)
}

::google::protobuf::uint8* ConfigData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.fiberhome.fums.proto.ConfigData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 uniqueId = 1;
  if (this->uniqueid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->uniqueid(), target);
  }

  // int32 configFileNo = 2;
  if (this->configfileno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->configfileno(), target);
  }

  // .com.fiberhome.fums.proto.ConfigData.ConfigFileTypeEnum configFileType = 3;
  if (this->configfiletype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->configfiletype(), target);
  }

  // string configFileName = 4;
  if (this->configfilename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->configfilename().data(), static_cast<int>(this->configfilename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.ConfigData.configFileName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->configfilename(), target);
  }

  // string configFileContent = 5;
  if (this->configfilecontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->configfilecontent().data(), static_cast<int>(this->configfilecontent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.ConfigData.configFileContent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->configfilecontent(), target);
  }

  // string updateNotifyScript = 6;
  if (this->updatenotifyscript().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->updatenotifyscript().data(), static_cast<int>(this->updatenotifyscript().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.ConfigData.updateNotifyScript");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->updatenotifyscript(), target);
  }

  // string fileSavePath = 7;
  if (this->filesavepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filesavepath().data(), static_cast<int>(this->filesavepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.ConfigData.fileSavePath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->filesavepath(), target);
  }

  // string viewConfScript = 8;
  if (this->viewconfscript().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->viewconfscript().data(), static_cast<int>(this->viewconfscript().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.ConfigData.viewConfScript");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->viewconfscript(), target);
  }

  // string serverPath = 9;
  if (this->serverpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverpath().data(), static_cast<int>(this->serverpath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.ConfigData.serverPath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->serverpath(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.fiberhome.fums.proto.ConfigData)
  return target;
}

size_t ConfigData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.fiberhome.fums.proto.ConfigData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string configFileName = 4;
  if (this->configfilename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->configfilename());
  }

  // string configFileContent = 5;
  if (this->configfilecontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->configfilecontent());
  }

  // string updateNotifyScript = 6;
  if (this->updatenotifyscript().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->updatenotifyscript());
  }

  // string fileSavePath = 7;
  if (this->filesavepath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filesavepath());
  }

  // string viewConfScript = 8;
  if (this->viewconfscript().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->viewconfscript());
  }

  // string serverPath = 9;
  if (this->serverpath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serverpath());
  }

  // int64 uniqueId = 1;
  if (this->uniqueid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->uniqueid());
  }

  // int32 configFileNo = 2;
  if (this->configfileno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->configfileno());
  }

  // .com.fiberhome.fums.proto.ConfigData.ConfigFileTypeEnum configFileType = 3;
  if (this->configfiletype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->configfiletype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.fiberhome.fums.proto.ConfigData)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.fiberhome.fums.proto.ConfigData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.fiberhome.fums.proto.ConfigData)
    MergeFrom(*source);
  }
}

void ConfigData::MergeFrom(const ConfigData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.fiberhome.fums.proto.ConfigData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.configfilename().size() > 0) {

    configfilename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.configfilename_);
  }
  if (from.configfilecontent().size() > 0) {

    configfilecontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.configfilecontent_);
  }
  if (from.updatenotifyscript().size() > 0) {

    updatenotifyscript_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.updatenotifyscript_);
  }
  if (from.filesavepath().size() > 0) {

    filesavepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filesavepath_);
  }
  if (from.viewconfscript().size() > 0) {

    viewconfscript_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.viewconfscript_);
  }
  if (from.serverpath().size() > 0) {

    serverpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverpath_);
  }
  if (from.uniqueid() != 0) {
    set_uniqueid(from.uniqueid());
  }
  if (from.configfileno() != 0) {
    set_configfileno(from.configfileno());
  }
  if (from.configfiletype() != 0) {
    set_configfiletype(from.configfiletype());
  }
}

void ConfigData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.fiberhome.fums.proto.ConfigData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigData::CopyFrom(const ConfigData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.fiberhome.fums.proto.ConfigData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigData::IsInitialized() const {
  return true;
}

void ConfigData::Swap(ConfigData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigData::InternalSwap(ConfigData* other) {
  using std::swap;
  configfilename_.Swap(&other->configfilename_);
  configfilecontent_.Swap(&other->configfilecontent_);
  updatenotifyscript_.Swap(&other->updatenotifyscript_);
  filesavepath_.Swap(&other->filesavepath_);
  viewconfscript_.Swap(&other->viewconfscript_);
  serverpath_.Swap(&other->serverpath_);
  swap(uniqueid_, other->uniqueid_);
  swap(configfileno_, other->configfileno_);
  swap(configfiletype_, other->configfiletype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigData::GetMetadata() const {
  protobuf_Config_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Config_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigData

// int64 uniqueId = 1;
void ConfigData::clear_uniqueid() {
  uniqueid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ConfigData::uniqueid() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.ConfigData.uniqueId)
  return uniqueid_;
}
void ConfigData::set_uniqueid(::google::protobuf::int64 value) {
  
  uniqueid_ = value;
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.ConfigData.uniqueId)
}

// int32 configFileNo = 2;
void ConfigData::clear_configfileno() {
  configfileno_ = 0;
}
::google::protobuf::int32 ConfigData::configfileno() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.ConfigData.configFileNo)
  return configfileno_;
}
void ConfigData::set_configfileno(::google::protobuf::int32 value) {
  
  configfileno_ = value;
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.ConfigData.configFileNo)
}

// .com.fiberhome.fums.proto.ConfigData.ConfigFileTypeEnum configFileType = 3;
void ConfigData::clear_configfiletype() {
  configfiletype_ = 0;
}
::com::fiberhome::fums::proto::ConfigData_ConfigFileTypeEnum ConfigData::configfiletype() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.ConfigData.configFileType)
  return static_cast< ::com::fiberhome::fums::proto::ConfigData_ConfigFileTypeEnum >(configfiletype_);
}
void ConfigData::set_configfiletype(::com::fiberhome::fums::proto::ConfigData_ConfigFileTypeEnum value) {
  
  configfiletype_ = value;
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.ConfigData.configFileType)
}

// string configFileName = 4;
void ConfigData::clear_configfilename() {
  configfilename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigData::configfilename() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.ConfigData.configFileName)
  return configfilename_.GetNoArena();
}
void ConfigData::set_configfilename(const ::std::string& value) {
  
  configfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.ConfigData.configFileName)
}
#if LANG_CXX11
void ConfigData::set_configfilename(::std::string&& value) {
  
  configfilename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fiberhome.fums.proto.ConfigData.configFileName)
}
#endif
void ConfigData::set_configfilename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  configfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fiberhome.fums.proto.ConfigData.configFileName)
}
void ConfigData::set_configfilename(const char* value, size_t size) {
  
  configfilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fiberhome.fums.proto.ConfigData.configFileName)
}
::std::string* ConfigData::mutable_configfilename() {
  
  // @@protoc_insertion_point(field_mutable:com.fiberhome.fums.proto.ConfigData.configFileName)
  return configfilename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigData::release_configfilename() {
  // @@protoc_insertion_point(field_release:com.fiberhome.fums.proto.ConfigData.configFileName)
  
  return configfilename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigData::set_allocated_configfilename(::std::string* configfilename) {
  if (configfilename != NULL) {
    
  } else {
    
  }
  configfilename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), configfilename);
  // @@protoc_insertion_point(field_set_allocated:com.fiberhome.fums.proto.ConfigData.configFileName)
}

// string configFileContent = 5;
void ConfigData::clear_configfilecontent() {
  configfilecontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigData::configfilecontent() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.ConfigData.configFileContent)
  return configfilecontent_.GetNoArena();
}
void ConfigData::set_configfilecontent(const ::std::string& value) {
  
  configfilecontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.ConfigData.configFileContent)
}
#if LANG_CXX11
void ConfigData::set_configfilecontent(::std::string&& value) {
  
  configfilecontent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fiberhome.fums.proto.ConfigData.configFileContent)
}
#endif
void ConfigData::set_configfilecontent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  configfilecontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fiberhome.fums.proto.ConfigData.configFileContent)
}
void ConfigData::set_configfilecontent(const char* value, size_t size) {
  
  configfilecontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fiberhome.fums.proto.ConfigData.configFileContent)
}
::std::string* ConfigData::mutable_configfilecontent() {
  
  // @@protoc_insertion_point(field_mutable:com.fiberhome.fums.proto.ConfigData.configFileContent)
  return configfilecontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigData::release_configfilecontent() {
  // @@protoc_insertion_point(field_release:com.fiberhome.fums.proto.ConfigData.configFileContent)
  
  return configfilecontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigData::set_allocated_configfilecontent(::std::string* configfilecontent) {
  if (configfilecontent != NULL) {
    
  } else {
    
  }
  configfilecontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), configfilecontent);
  // @@protoc_insertion_point(field_set_allocated:com.fiberhome.fums.proto.ConfigData.configFileContent)
}

// string updateNotifyScript = 6;
void ConfigData::clear_updatenotifyscript() {
  updatenotifyscript_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigData::updatenotifyscript() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.ConfigData.updateNotifyScript)
  return updatenotifyscript_.GetNoArena();
}
void ConfigData::set_updatenotifyscript(const ::std::string& value) {
  
  updatenotifyscript_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.ConfigData.updateNotifyScript)
}
#if LANG_CXX11
void ConfigData::set_updatenotifyscript(::std::string&& value) {
  
  updatenotifyscript_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fiberhome.fums.proto.ConfigData.updateNotifyScript)
}
#endif
void ConfigData::set_updatenotifyscript(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  updatenotifyscript_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fiberhome.fums.proto.ConfigData.updateNotifyScript)
}
void ConfigData::set_updatenotifyscript(const char* value, size_t size) {
  
  updatenotifyscript_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fiberhome.fums.proto.ConfigData.updateNotifyScript)
}
::std::string* ConfigData::mutable_updatenotifyscript() {
  
  // @@protoc_insertion_point(field_mutable:com.fiberhome.fums.proto.ConfigData.updateNotifyScript)
  return updatenotifyscript_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigData::release_updatenotifyscript() {
  // @@protoc_insertion_point(field_release:com.fiberhome.fums.proto.ConfigData.updateNotifyScript)
  
  return updatenotifyscript_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigData::set_allocated_updatenotifyscript(::std::string* updatenotifyscript) {
  if (updatenotifyscript != NULL) {
    
  } else {
    
  }
  updatenotifyscript_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), updatenotifyscript);
  // @@protoc_insertion_point(field_set_allocated:com.fiberhome.fums.proto.ConfigData.updateNotifyScript)
}

// string fileSavePath = 7;
void ConfigData::clear_filesavepath() {
  filesavepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigData::filesavepath() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.ConfigData.fileSavePath)
  return filesavepath_.GetNoArena();
}
void ConfigData::set_filesavepath(const ::std::string& value) {
  
  filesavepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.ConfigData.fileSavePath)
}
#if LANG_CXX11
void ConfigData::set_filesavepath(::std::string&& value) {
  
  filesavepath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fiberhome.fums.proto.ConfigData.fileSavePath)
}
#endif
void ConfigData::set_filesavepath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  filesavepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fiberhome.fums.proto.ConfigData.fileSavePath)
}
void ConfigData::set_filesavepath(const char* value, size_t size) {
  
  filesavepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fiberhome.fums.proto.ConfigData.fileSavePath)
}
::std::string* ConfigData::mutable_filesavepath() {
  
  // @@protoc_insertion_point(field_mutable:com.fiberhome.fums.proto.ConfigData.fileSavePath)
  return filesavepath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigData::release_filesavepath() {
  // @@protoc_insertion_point(field_release:com.fiberhome.fums.proto.ConfigData.fileSavePath)
  
  return filesavepath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigData::set_allocated_filesavepath(::std::string* filesavepath) {
  if (filesavepath != NULL) {
    
  } else {
    
  }
  filesavepath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesavepath);
  // @@protoc_insertion_point(field_set_allocated:com.fiberhome.fums.proto.ConfigData.fileSavePath)
}

// string viewConfScript = 8;
void ConfigData::clear_viewconfscript() {
  viewconfscript_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigData::viewconfscript() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.ConfigData.viewConfScript)
  return viewconfscript_.GetNoArena();
}
void ConfigData::set_viewconfscript(const ::std::string& value) {
  
  viewconfscript_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.ConfigData.viewConfScript)
}
#if LANG_CXX11
void ConfigData::set_viewconfscript(::std::string&& value) {
  
  viewconfscript_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fiberhome.fums.proto.ConfigData.viewConfScript)
}
#endif
void ConfigData::set_viewconfscript(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  viewconfscript_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fiberhome.fums.proto.ConfigData.viewConfScript)
}
void ConfigData::set_viewconfscript(const char* value, size_t size) {
  
  viewconfscript_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fiberhome.fums.proto.ConfigData.viewConfScript)
}
::std::string* ConfigData::mutable_viewconfscript() {
  
  // @@protoc_insertion_point(field_mutable:com.fiberhome.fums.proto.ConfigData.viewConfScript)
  return viewconfscript_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigData::release_viewconfscript() {
  // @@protoc_insertion_point(field_release:com.fiberhome.fums.proto.ConfigData.viewConfScript)
  
  return viewconfscript_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigData::set_allocated_viewconfscript(::std::string* viewconfscript) {
  if (viewconfscript != NULL) {
    
  } else {
    
  }
  viewconfscript_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), viewconfscript);
  // @@protoc_insertion_point(field_set_allocated:com.fiberhome.fums.proto.ConfigData.viewConfScript)
}

// string serverPath = 9;
void ConfigData::clear_serverpath() {
  serverpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigData::serverpath() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.ConfigData.serverPath)
  return serverpath_.GetNoArena();
}
void ConfigData::set_serverpath(const ::std::string& value) {
  
  serverpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.ConfigData.serverPath)
}
#if LANG_CXX11
void ConfigData::set_serverpath(::std::string&& value) {
  
  serverpath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fiberhome.fums.proto.ConfigData.serverPath)
}
#endif
void ConfigData::set_serverpath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  serverpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fiberhome.fums.proto.ConfigData.serverPath)
}
void ConfigData::set_serverpath(const char* value, size_t size) {
  
  serverpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fiberhome.fums.proto.ConfigData.serverPath)
}
::std::string* ConfigData::mutable_serverpath() {
  
  // @@protoc_insertion_point(field_mutable:com.fiberhome.fums.proto.ConfigData.serverPath)
  return serverpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigData::release_serverpath() {
  // @@protoc_insertion_point(field_release:com.fiberhome.fums.proto.ConfigData.serverPath)
  
  return serverpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigData::set_allocated_serverpath(::std::string* serverpath) {
  if (serverpath != NULL) {
    
  } else {
    
  }
  serverpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serverpath);
  // @@protoc_insertion_point(field_set_allocated:com.fiberhome.fums.proto.ConfigData.serverPath)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigUpdateResponse::kUniqueIdFieldNumber;
const int ConfigUpdateResponse::kFileNameFieldNumber;
const int ConfigUpdateResponse::kStatusFieldNumber;
const int ConfigUpdateResponse::kReasonFieldNumber;
const int ConfigUpdateResponse::kNeTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigUpdateResponse::ConfigUpdateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Config_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.fiberhome.fums.proto.ConfigUpdateResponse)
}
ConfigUpdateResponse::ConfigUpdateResponse(const ConfigUpdateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reason().size() > 0) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  ::memcpy(&uniqueid_, &from.uniqueid_,
    static_cast<size_t>(reinterpret_cast<char*>(&netype_) -
    reinterpret_cast<char*>(&uniqueid_)) + sizeof(netype_));
  // @@protoc_insertion_point(copy_constructor:com.fiberhome.fums.proto.ConfigUpdateResponse)
}

void ConfigUpdateResponse::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uniqueid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&netype_) -
      reinterpret_cast<char*>(&uniqueid_)) + sizeof(netype_));
  _cached_size_ = 0;
}

ConfigUpdateResponse::~ConfigUpdateResponse() {
  // @@protoc_insertion_point(destructor:com.fiberhome.fums.proto.ConfigUpdateResponse)
  SharedDtor();
}

void ConfigUpdateResponse::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigUpdateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigUpdateResponse::descriptor() {
  protobuf_Config_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Config_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigUpdateResponse& ConfigUpdateResponse::default_instance() {
  protobuf_Config_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConfigUpdateResponse* ConfigUpdateResponse::New(::google::protobuf::Arena* arena) const {
  ConfigUpdateResponse* n = new ConfigUpdateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigUpdateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:com.fiberhome.fums.proto.ConfigUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uniqueid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&netype_) -
      reinterpret_cast<char*>(&uniqueid_)) + sizeof(netype_));
  _internal_metadata_.Clear();
}

bool ConfigUpdateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.fiberhome.fums.proto.ConfigUpdateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 uniqueId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uniqueid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fileName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.fiberhome.fums.proto.ConfigUpdateResponse.fileName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.fiberhome.fums.proto.CommonResponse.ResStatusEnum status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::com::fiberhome::fums::proto::CommonResponse_ResStatusEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reason = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.fiberhome.fums.proto.ConfigUpdateResponse.reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.fiberhome.fums.proto.ConfigData.ConfigFileTypeEnum neType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_netype(static_cast< ::com::fiberhome::fums::proto::ConfigData_ConfigFileTypeEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.fiberhome.fums.proto.ConfigUpdateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.fiberhome.fums.proto.ConfigUpdateResponse)
  return false;
#undef DO_
}

void ConfigUpdateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.fiberhome.fums.proto.ConfigUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 uniqueId = 1;
  if (this->uniqueid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->uniqueid(), output);
  }

  // string fileName = 2;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.ConfigUpdateResponse.fileName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filename(), output);
  }

  // .com.fiberhome.fums.proto.CommonResponse.ResStatusEnum status = 3;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->status(), output);
  }

  // string reason = 4;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.ConfigUpdateResponse.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->reason(), output);
  }

  // .com.fiberhome.fums.proto.ConfigData.ConfigFileTypeEnum neType = 5;
  if (this->netype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->netype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.fiberhome.fums.proto.ConfigUpdateResponse)
}

::google::protobuf::uint8* ConfigUpdateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.fiberhome.fums.proto.ConfigUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 uniqueId = 1;
  if (this->uniqueid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->uniqueid(), target);
  }

  // string fileName = 2;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.ConfigUpdateResponse.fileName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filename(), target);
  }

  // .com.fiberhome.fums.proto.CommonResponse.ResStatusEnum status = 3;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->status(), target);
  }

  // string reason = 4;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fiberhome.fums.proto.ConfigUpdateResponse.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->reason(), target);
  }

  // .com.fiberhome.fums.proto.ConfigData.ConfigFileTypeEnum neType = 5;
  if (this->netype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->netype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.fiberhome.fums.proto.ConfigUpdateResponse)
  return target;
}

size_t ConfigUpdateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.fiberhome.fums.proto.ConfigUpdateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string fileName = 2;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // string reason = 4;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  // int64 uniqueId = 1;
  if (this->uniqueid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->uniqueid());
  }

  // .com.fiberhome.fums.proto.CommonResponse.ResStatusEnum status = 3;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // .com.fiberhome.fums.proto.ConfigData.ConfigFileTypeEnum neType = 5;
  if (this->netype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->netype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigUpdateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.fiberhome.fums.proto.ConfigUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigUpdateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigUpdateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.fiberhome.fums.proto.ConfigUpdateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.fiberhome.fums.proto.ConfigUpdateResponse)
    MergeFrom(*source);
  }
}

void ConfigUpdateResponse::MergeFrom(const ConfigUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.fiberhome.fums.proto.ConfigUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.reason().size() > 0) {

    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.uniqueid() != 0) {
    set_uniqueid(from.uniqueid());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.netype() != 0) {
    set_netype(from.netype());
  }
}

void ConfigUpdateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.fiberhome.fums.proto.ConfigUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigUpdateResponse::CopyFrom(const ConfigUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.fiberhome.fums.proto.ConfigUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigUpdateResponse::IsInitialized() const {
  return true;
}

void ConfigUpdateResponse::Swap(ConfigUpdateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigUpdateResponse::InternalSwap(ConfigUpdateResponse* other) {
  using std::swap;
  filename_.Swap(&other->filename_);
  reason_.Swap(&other->reason_);
  swap(uniqueid_, other->uniqueid_);
  swap(status_, other->status_);
  swap(netype_, other->netype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigUpdateResponse::GetMetadata() const {
  protobuf_Config_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Config_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigUpdateResponse

// int64 uniqueId = 1;
void ConfigUpdateResponse::clear_uniqueid() {
  uniqueid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ConfigUpdateResponse::uniqueid() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.ConfigUpdateResponse.uniqueId)
  return uniqueid_;
}
void ConfigUpdateResponse::set_uniqueid(::google::protobuf::int64 value) {
  
  uniqueid_ = value;
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.ConfigUpdateResponse.uniqueId)
}

// string fileName = 2;
void ConfigUpdateResponse::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigUpdateResponse::filename() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.ConfigUpdateResponse.fileName)
  return filename_.GetNoArena();
}
void ConfigUpdateResponse::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.ConfigUpdateResponse.fileName)
}
#if LANG_CXX11
void ConfigUpdateResponse::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fiberhome.fums.proto.ConfigUpdateResponse.fileName)
}
#endif
void ConfigUpdateResponse::set_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fiberhome.fums.proto.ConfigUpdateResponse.fileName)
}
void ConfigUpdateResponse::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fiberhome.fums.proto.ConfigUpdateResponse.fileName)
}
::std::string* ConfigUpdateResponse::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:com.fiberhome.fums.proto.ConfigUpdateResponse.fileName)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigUpdateResponse::release_filename() {
  // @@protoc_insertion_point(field_release:com.fiberhome.fums.proto.ConfigUpdateResponse.fileName)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigUpdateResponse::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:com.fiberhome.fums.proto.ConfigUpdateResponse.fileName)
}

// .com.fiberhome.fums.proto.CommonResponse.ResStatusEnum status = 3;
void ConfigUpdateResponse::clear_status() {
  status_ = 0;
}
::com::fiberhome::fums::proto::CommonResponse_ResStatusEnum ConfigUpdateResponse::status() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.ConfigUpdateResponse.status)
  return static_cast< ::com::fiberhome::fums::proto::CommonResponse_ResStatusEnum >(status_);
}
void ConfigUpdateResponse::set_status(::com::fiberhome::fums::proto::CommonResponse_ResStatusEnum value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.ConfigUpdateResponse.status)
}

// string reason = 4;
void ConfigUpdateResponse::clear_reason() {
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigUpdateResponse::reason() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.ConfigUpdateResponse.reason)
  return reason_.GetNoArena();
}
void ConfigUpdateResponse::set_reason(const ::std::string& value) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.ConfigUpdateResponse.reason)
}
#if LANG_CXX11
void ConfigUpdateResponse::set_reason(::std::string&& value) {
  
  reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fiberhome.fums.proto.ConfigUpdateResponse.reason)
}
#endif
void ConfigUpdateResponse::set_reason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fiberhome.fums.proto.ConfigUpdateResponse.reason)
}
void ConfigUpdateResponse::set_reason(const char* value, size_t size) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fiberhome.fums.proto.ConfigUpdateResponse.reason)
}
::std::string* ConfigUpdateResponse::mutable_reason() {
  
  // @@protoc_insertion_point(field_mutable:com.fiberhome.fums.proto.ConfigUpdateResponse.reason)
  return reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigUpdateResponse::release_reason() {
  // @@protoc_insertion_point(field_release:com.fiberhome.fums.proto.ConfigUpdateResponse.reason)
  
  return reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigUpdateResponse::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    
  } else {
    
  }
  reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:com.fiberhome.fums.proto.ConfigUpdateResponse.reason)
}

// .com.fiberhome.fums.proto.ConfigData.ConfigFileTypeEnum neType = 5;
void ConfigUpdateResponse::clear_netype() {
  netype_ = 0;
}
::com::fiberhome::fums::proto::ConfigData_ConfigFileTypeEnum ConfigUpdateResponse::netype() const {
  // @@protoc_insertion_point(field_get:com.fiberhome.fums.proto.ConfigUpdateResponse.neType)
  return static_cast< ::com::fiberhome::fums::proto::ConfigData_ConfigFileTypeEnum >(netype_);
}
void ConfigUpdateResponse::set_netype(::com::fiberhome::fums::proto::ConfigData_ConfigFileTypeEnum value) {
  
  netype_ = value;
  // @@protoc_insertion_point(field_set:com.fiberhome.fums.proto.ConfigUpdateResponse.neType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace fums
}  // namespace fiberhome
}  // namespace com

// @@protoc_insertion_point(global_scope)

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Alarm.proto

#ifndef PROTOBUF_Alarm_2eproto__INCLUDED
#define PROTOBUF_Alarm_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "CommonDefine.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class AlarmData;
class AlarmDataDefaultTypeInternal;
extern AlarmDataDefaultTypeInternal _AlarmData_default_instance_;
class AlarmResponse;
class AlarmResponseDefaultTypeInternal;
extern AlarmResponseDefaultTypeInternal _AlarmResponse_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_Alarm_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_Alarm_2eproto

enum AlarmData_ALARM_OP_TYPE {
  AlarmData_ALARM_OP_TYPE_ADD = 0,
  AlarmData_ALARM_OP_TYPE_UPDATE = 1,
  AlarmData_ALARM_OP_TYPE_DEL = 2,
  AlarmData_ALARM_OP_TYPE_AlarmData_ALARM_OP_TYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AlarmData_ALARM_OP_TYPE_AlarmData_ALARM_OP_TYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AlarmData_ALARM_OP_TYPE_IsValid(int value);
const AlarmData_ALARM_OP_TYPE AlarmData_ALARM_OP_TYPE_ALARM_OP_TYPE_MIN = AlarmData_ALARM_OP_TYPE_ADD;
const AlarmData_ALARM_OP_TYPE AlarmData_ALARM_OP_TYPE_ALARM_OP_TYPE_MAX = AlarmData_ALARM_OP_TYPE_DEL;
const int AlarmData_ALARM_OP_TYPE_ALARM_OP_TYPE_ARRAYSIZE = AlarmData_ALARM_OP_TYPE_ALARM_OP_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* AlarmData_ALARM_OP_TYPE_descriptor();
inline const ::std::string& AlarmData_ALARM_OP_TYPE_Name(AlarmData_ALARM_OP_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    AlarmData_ALARM_OP_TYPE_descriptor(), value);
}
inline bool AlarmData_ALARM_OP_TYPE_Parse(
    const ::std::string& name, AlarmData_ALARM_OP_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AlarmData_ALARM_OP_TYPE>(
    AlarmData_ALARM_OP_TYPE_descriptor(), name, value);
}
enum AlarmData_AlarmEntityTypeEnum {
  AlarmData_AlarmEntityTypeEnum_OTHER = 0,
  AlarmData_AlarmEntityTypeEnum_HOST = 1,
  AlarmData_AlarmEntityTypeEnum_NE = 2,
  AlarmData_AlarmEntityTypeEnum_APP = 3,
  AlarmData_AlarmEntityTypeEnum_FUMS = 4,
  AlarmData_AlarmEntityTypeEnum_AlarmData_AlarmEntityTypeEnum_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AlarmData_AlarmEntityTypeEnum_AlarmData_AlarmEntityTypeEnum_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AlarmData_AlarmEntityTypeEnum_IsValid(int value);
const AlarmData_AlarmEntityTypeEnum AlarmData_AlarmEntityTypeEnum_AlarmEntityTypeEnum_MIN = AlarmData_AlarmEntityTypeEnum_OTHER;
const AlarmData_AlarmEntityTypeEnum AlarmData_AlarmEntityTypeEnum_AlarmEntityTypeEnum_MAX = AlarmData_AlarmEntityTypeEnum_FUMS;
const int AlarmData_AlarmEntityTypeEnum_AlarmEntityTypeEnum_ARRAYSIZE = AlarmData_AlarmEntityTypeEnum_AlarmEntityTypeEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* AlarmData_AlarmEntityTypeEnum_descriptor();
inline const ::std::string& AlarmData_AlarmEntityTypeEnum_Name(AlarmData_AlarmEntityTypeEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    AlarmData_AlarmEntityTypeEnum_descriptor(), value);
}
inline bool AlarmData_AlarmEntityTypeEnum_Parse(
    const ::std::string& name, AlarmData_AlarmEntityTypeEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AlarmData_AlarmEntityTypeEnum>(
    AlarmData_AlarmEntityTypeEnum_descriptor(), name, value);
}
enum AlarmData_AlarmSeverityEnum {
  AlarmData_AlarmSeverityEnum_NORMAL = 0,
  AlarmData_AlarmSeverityEnum_CRITICAL = 1,
  AlarmData_AlarmSeverityEnum_MAJOR = 2,
  AlarmData_AlarmSeverityEnum_MINOR = 3,
  AlarmData_AlarmSeverityEnum_WARNING = 4,
  AlarmData_AlarmSeverityEnum_CLEARED = 5,
  AlarmData_AlarmSeverityEnum_AlarmData_AlarmSeverityEnum_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AlarmData_AlarmSeverityEnum_AlarmData_AlarmSeverityEnum_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AlarmData_AlarmSeverityEnum_IsValid(int value);
const AlarmData_AlarmSeverityEnum AlarmData_AlarmSeverityEnum_AlarmSeverityEnum_MIN = AlarmData_AlarmSeverityEnum_NORMAL;
const AlarmData_AlarmSeverityEnum AlarmData_AlarmSeverityEnum_AlarmSeverityEnum_MAX = AlarmData_AlarmSeverityEnum_CLEARED;
const int AlarmData_AlarmSeverityEnum_AlarmSeverityEnum_ARRAYSIZE = AlarmData_AlarmSeverityEnum_AlarmSeverityEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* AlarmData_AlarmSeverityEnum_descriptor();
inline const ::std::string& AlarmData_AlarmSeverityEnum_Name(AlarmData_AlarmSeverityEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    AlarmData_AlarmSeverityEnum_descriptor(), value);
}
inline bool AlarmData_AlarmSeverityEnum_Parse(
    const ::std::string& name, AlarmData_AlarmSeverityEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AlarmData_AlarmSeverityEnum>(
    AlarmData_AlarmSeverityEnum_descriptor(), name, value);
}
enum AlarmData_AlarmTypeEnum {
  AlarmData_AlarmTypeEnum_COMMUNICATION = 0,
  AlarmData_AlarmTypeEnum_DEVICE = 1,
  AlarmData_AlarmTypeEnum_PROCESSINGFAILURE = 2,
  AlarmData_AlarmTypeEnum_QOS = 3,
  AlarmData_AlarmTypeEnum_ENVIRONMENT = 4,
  AlarmData_AlarmTypeEnum_AlarmData_AlarmTypeEnum_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AlarmData_AlarmTypeEnum_AlarmData_AlarmTypeEnum_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AlarmData_AlarmTypeEnum_IsValid(int value);
const AlarmData_AlarmTypeEnum AlarmData_AlarmTypeEnum_AlarmTypeEnum_MIN = AlarmData_AlarmTypeEnum_COMMUNICATION;
const AlarmData_AlarmTypeEnum AlarmData_AlarmTypeEnum_AlarmTypeEnum_MAX = AlarmData_AlarmTypeEnum_ENVIRONMENT;
const int AlarmData_AlarmTypeEnum_AlarmTypeEnum_ARRAYSIZE = AlarmData_AlarmTypeEnum_AlarmTypeEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* AlarmData_AlarmTypeEnum_descriptor();
inline const ::std::string& AlarmData_AlarmTypeEnum_Name(AlarmData_AlarmTypeEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    AlarmData_AlarmTypeEnum_descriptor(), value);
}
inline bool AlarmData_AlarmTypeEnum_Parse(
    const ::std::string& name, AlarmData_AlarmTypeEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AlarmData_AlarmTypeEnum>(
    AlarmData_AlarmTypeEnum_descriptor(), name, value);
}
// ===================================================================

class AlarmData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AlarmData) */ {
 public:
  AlarmData();
  virtual ~AlarmData();

  AlarmData(const AlarmData& from);

  inline AlarmData& operator=(const AlarmData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AlarmData(AlarmData&& from) noexcept
    : AlarmData() {
    *this = ::std::move(from);
  }

  inline AlarmData& operator=(AlarmData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmData& default_instance();

  static inline const AlarmData* internal_default_instance() {
    return reinterpret_cast<const AlarmData*>(
               &_AlarmData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AlarmData* other);
  friend void swap(AlarmData& a, AlarmData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AlarmData* New() const PROTOBUF_FINAL { return New(NULL); }

  AlarmData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AlarmData& from);
  void MergeFrom(const AlarmData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AlarmData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AlarmData_ALARM_OP_TYPE ALARM_OP_TYPE;
  static const ALARM_OP_TYPE ADD =
    AlarmData_ALARM_OP_TYPE_ADD;
  static const ALARM_OP_TYPE UPDATE =
    AlarmData_ALARM_OP_TYPE_UPDATE;
  static const ALARM_OP_TYPE DEL =
    AlarmData_ALARM_OP_TYPE_DEL;
  static inline bool ALARM_OP_TYPE_IsValid(int value) {
    return AlarmData_ALARM_OP_TYPE_IsValid(value);
  }
  static const ALARM_OP_TYPE ALARM_OP_TYPE_MIN =
    AlarmData_ALARM_OP_TYPE_ALARM_OP_TYPE_MIN;
  static const ALARM_OP_TYPE ALARM_OP_TYPE_MAX =
    AlarmData_ALARM_OP_TYPE_ALARM_OP_TYPE_MAX;
  static const int ALARM_OP_TYPE_ARRAYSIZE =
    AlarmData_ALARM_OP_TYPE_ALARM_OP_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ALARM_OP_TYPE_descriptor() {
    return AlarmData_ALARM_OP_TYPE_descriptor();
  }
  static inline const ::std::string& ALARM_OP_TYPE_Name(ALARM_OP_TYPE value) {
    return AlarmData_ALARM_OP_TYPE_Name(value);
  }
  static inline bool ALARM_OP_TYPE_Parse(const ::std::string& name,
      ALARM_OP_TYPE* value) {
    return AlarmData_ALARM_OP_TYPE_Parse(name, value);
  }

  typedef AlarmData_AlarmEntityTypeEnum AlarmEntityTypeEnum;
  static const AlarmEntityTypeEnum OTHER =
    AlarmData_AlarmEntityTypeEnum_OTHER;
  static const AlarmEntityTypeEnum HOST =
    AlarmData_AlarmEntityTypeEnum_HOST;
  static const AlarmEntityTypeEnum NE =
    AlarmData_AlarmEntityTypeEnum_NE;
  static const AlarmEntityTypeEnum APP =
    AlarmData_AlarmEntityTypeEnum_APP;
  static const AlarmEntityTypeEnum FUMS =
    AlarmData_AlarmEntityTypeEnum_FUMS;
  static inline bool AlarmEntityTypeEnum_IsValid(int value) {
    return AlarmData_AlarmEntityTypeEnum_IsValid(value);
  }
  static const AlarmEntityTypeEnum AlarmEntityTypeEnum_MIN =
    AlarmData_AlarmEntityTypeEnum_AlarmEntityTypeEnum_MIN;
  static const AlarmEntityTypeEnum AlarmEntityTypeEnum_MAX =
    AlarmData_AlarmEntityTypeEnum_AlarmEntityTypeEnum_MAX;
  static const int AlarmEntityTypeEnum_ARRAYSIZE =
    AlarmData_AlarmEntityTypeEnum_AlarmEntityTypeEnum_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AlarmEntityTypeEnum_descriptor() {
    return AlarmData_AlarmEntityTypeEnum_descriptor();
  }
  static inline const ::std::string& AlarmEntityTypeEnum_Name(AlarmEntityTypeEnum value) {
    return AlarmData_AlarmEntityTypeEnum_Name(value);
  }
  static inline bool AlarmEntityTypeEnum_Parse(const ::std::string& name,
      AlarmEntityTypeEnum* value) {
    return AlarmData_AlarmEntityTypeEnum_Parse(name, value);
  }

  typedef AlarmData_AlarmSeverityEnum AlarmSeverityEnum;
  static const AlarmSeverityEnum NORMAL =
    AlarmData_AlarmSeverityEnum_NORMAL;
  static const AlarmSeverityEnum CRITICAL =
    AlarmData_AlarmSeverityEnum_CRITICAL;
  static const AlarmSeverityEnum MAJOR =
    AlarmData_AlarmSeverityEnum_MAJOR;
  static const AlarmSeverityEnum MINOR =
    AlarmData_AlarmSeverityEnum_MINOR;
  static const AlarmSeverityEnum WARNING =
    AlarmData_AlarmSeverityEnum_WARNING;
  static const AlarmSeverityEnum CLEARED =
    AlarmData_AlarmSeverityEnum_CLEARED;
  static inline bool AlarmSeverityEnum_IsValid(int value) {
    return AlarmData_AlarmSeverityEnum_IsValid(value);
  }
  static const AlarmSeverityEnum AlarmSeverityEnum_MIN =
    AlarmData_AlarmSeverityEnum_AlarmSeverityEnum_MIN;
  static const AlarmSeverityEnum AlarmSeverityEnum_MAX =
    AlarmData_AlarmSeverityEnum_AlarmSeverityEnum_MAX;
  static const int AlarmSeverityEnum_ARRAYSIZE =
    AlarmData_AlarmSeverityEnum_AlarmSeverityEnum_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AlarmSeverityEnum_descriptor() {
    return AlarmData_AlarmSeverityEnum_descriptor();
  }
  static inline const ::std::string& AlarmSeverityEnum_Name(AlarmSeverityEnum value) {
    return AlarmData_AlarmSeverityEnum_Name(value);
  }
  static inline bool AlarmSeverityEnum_Parse(const ::std::string& name,
      AlarmSeverityEnum* value) {
    return AlarmData_AlarmSeverityEnum_Parse(name, value);
  }

  typedef AlarmData_AlarmTypeEnum AlarmTypeEnum;
  static const AlarmTypeEnum COMMUNICATION =
    AlarmData_AlarmTypeEnum_COMMUNICATION;
  static const AlarmTypeEnum DEVICE =
    AlarmData_AlarmTypeEnum_DEVICE;
  static const AlarmTypeEnum PROCESSINGFAILURE =
    AlarmData_AlarmTypeEnum_PROCESSINGFAILURE;
  static const AlarmTypeEnum QOS =
    AlarmData_AlarmTypeEnum_QOS;
  static const AlarmTypeEnum ENVIRONMENT =
    AlarmData_AlarmTypeEnum_ENVIRONMENT;
  static inline bool AlarmTypeEnum_IsValid(int value) {
    return AlarmData_AlarmTypeEnum_IsValid(value);
  }
  static const AlarmTypeEnum AlarmTypeEnum_MIN =
    AlarmData_AlarmTypeEnum_AlarmTypeEnum_MIN;
  static const AlarmTypeEnum AlarmTypeEnum_MAX =
    AlarmData_AlarmTypeEnum_AlarmTypeEnum_MAX;
  static const int AlarmTypeEnum_ARRAYSIZE =
    AlarmData_AlarmTypeEnum_AlarmTypeEnum_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AlarmTypeEnum_descriptor() {
    return AlarmData_AlarmTypeEnum_descriptor();
  }
  static inline const ::std::string& AlarmTypeEnum_Name(AlarmTypeEnum value) {
    return AlarmData_AlarmTypeEnum_Name(value);
  }
  static inline bool AlarmTypeEnum_Parse(const ::std::string& name,
      AlarmTypeEnum* value) {
    return AlarmData_AlarmTypeEnum_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string alarmProbableCause = 3;
  void clear_alarmprobablecause();
  static const int kAlarmProbableCauseFieldNumber = 3;
  const ::std::string& alarmprobablecause() const;
  void set_alarmprobablecause(const ::std::string& value);
  #if LANG_CXX11
  void set_alarmprobablecause(::std::string&& value);
  #endif
  void set_alarmprobablecause(const char* value);
  void set_alarmprobablecause(const char* value, size_t size);
  ::std::string* mutable_alarmprobablecause();
  ::std::string* release_alarmprobablecause();
  void set_allocated_alarmprobablecause(::std::string* alarmprobablecause);

  // string alarmSpecificReason = 5;
  void clear_alarmspecificreason();
  static const int kAlarmSpecificReasonFieldNumber = 5;
  const ::std::string& alarmspecificreason() const;
  void set_alarmspecificreason(const ::std::string& value);
  #if LANG_CXX11
  void set_alarmspecificreason(::std::string&& value);
  #endif
  void set_alarmspecificreason(const char* value);
  void set_alarmspecificreason(const char* value, size_t size);
  ::std::string* mutable_alarmspecificreason();
  ::std::string* release_alarmspecificreason();
  void set_allocated_alarmspecificreason(::std::string* alarmspecificreason);

  // string alarmEntityInstance = 7;
  void clear_alarmentityinstance();
  static const int kAlarmEntityInstanceFieldNumber = 7;
  const ::std::string& alarmentityinstance() const;
  void set_alarmentityinstance(const ::std::string& value);
  #if LANG_CXX11
  void set_alarmentityinstance(::std::string&& value);
  #endif
  void set_alarmentityinstance(const char* value);
  void set_alarmentityinstance(const char* value, size_t size);
  ::std::string* mutable_alarmentityinstance();
  ::std::string* release_alarmentityinstance();
  void set_allocated_alarmentityinstance(::std::string* alarmentityinstance);

  // string alarmOccurTime = 9;
  void clear_alarmoccurtime();
  static const int kAlarmOccurTimeFieldNumber = 9;
  const ::std::string& alarmoccurtime() const;
  void set_alarmoccurtime(const ::std::string& value);
  #if LANG_CXX11
  void set_alarmoccurtime(::std::string&& value);
  #endif
  void set_alarmoccurtime(const char* value);
  void set_alarmoccurtime(const char* value, size_t size);
  ::std::string* mutable_alarmoccurtime();
  ::std::string* release_alarmoccurtime();
  void set_allocated_alarmoccurtime(::std::string* alarmoccurtime);

  // string alarmMessage = 10;
  void clear_alarmmessage();
  static const int kAlarmMessageFieldNumber = 10;
  const ::std::string& alarmmessage() const;
  void set_alarmmessage(const ::std::string& value);
  #if LANG_CXX11
  void set_alarmmessage(::std::string&& value);
  #endif
  void set_alarmmessage(const char* value);
  void set_alarmmessage(const char* value, size_t size);
  ::std::string* mutable_alarmmessage();
  ::std::string* release_alarmmessage();
  void set_allocated_alarmmessage(::std::string* alarmmessage);

  // string alarmEntityTypeStr = 12;
  void clear_alarmentitytypestr();
  static const int kAlarmEntityTypeStrFieldNumber = 12;
  const ::std::string& alarmentitytypestr() const;
  void set_alarmentitytypestr(const ::std::string& value);
  #if LANG_CXX11
  void set_alarmentitytypestr(::std::string&& value);
  #endif
  void set_alarmentitytypestr(const char* value);
  void set_alarmentitytypestr(const char* value, size_t size);
  ::std::string* mutable_alarmentitytypestr();
  ::std::string* release_alarmentitytypestr();
  void set_allocated_alarmentitytypestr(::std::string* alarmentitytypestr);

  // string alarmSeverityStr = 14;
  void clear_alarmseveritystr();
  static const int kAlarmSeverityStrFieldNumber = 14;
  const ::std::string& alarmseveritystr() const;
  void set_alarmseveritystr(const ::std::string& value);
  #if LANG_CXX11
  void set_alarmseveritystr(::std::string&& value);
  #endif
  void set_alarmseveritystr(const char* value);
  void set_alarmseveritystr(const char* value, size_t size);
  ::std::string* mutable_alarmseveritystr();
  ::std::string* release_alarmseveritystr();
  void set_allocated_alarmseveritystr(::std::string* alarmseveritystr);

  // string alarmTypeStr = 16;
  void clear_alarmtypestr();
  static const int kAlarmTypeStrFieldNumber = 16;
  const ::std::string& alarmtypestr() const;
  void set_alarmtypestr(const ::std::string& value);
  #if LANG_CXX11
  void set_alarmtypestr(::std::string&& value);
  #endif
  void set_alarmtypestr(const char* value);
  void set_alarmtypestr(const char* value, size_t size);
  ::std::string* mutable_alarmtypestr();
  ::std::string* release_alarmtypestr();
  void set_allocated_alarmtypestr(::std::string* alarmtypestr);

  // .proto.AlarmData.ALARM_OP_TYPE op_type = 1;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  ::proto::AlarmData_ALARM_OP_TYPE op_type() const;
  void set_op_type(::proto::AlarmData_ALARM_OP_TYPE value);

  // int32 alarmSeqNo = 2;
  void clear_alarmseqno();
  static const int kAlarmSeqNoFieldNumber = 2;
  ::google::protobuf::int32 alarmseqno() const;
  void set_alarmseqno(::google::protobuf::int32 value);

  // int32 alarmProbableCauseCode = 4;
  void clear_alarmprobablecausecode();
  static const int kAlarmProbableCauseCodeFieldNumber = 4;
  ::google::protobuf::int32 alarmprobablecausecode() const;
  void set_alarmprobablecausecode(::google::protobuf::int32 value);

  // int32 alarmSpecificReasonCode = 6;
  void clear_alarmspecificreasoncode();
  static const int kAlarmSpecificReasonCodeFieldNumber = 6;
  ::google::protobuf::int32 alarmspecificreasoncode() const;
  void set_alarmspecificreasoncode(::google::protobuf::int32 value);

  // .proto.EnumDefineData.AppTypeEnum appTypeCode = 8;
  void clear_apptypecode();
  static const int kAppTypeCodeFieldNumber = 8;
  ::proto::EnumDefineData_AppTypeEnum apptypecode() const;
  void set_apptypecode(::proto::EnumDefineData_AppTypeEnum value);

  // .proto.AlarmData.AlarmEntityTypeEnum alarmEntityType = 11;
  void clear_alarmentitytype();
  static const int kAlarmEntityTypeFieldNumber = 11;
  ::proto::AlarmData_AlarmEntityTypeEnum alarmentitytype() const;
  void set_alarmentitytype(::proto::AlarmData_AlarmEntityTypeEnum value);

  // .proto.AlarmData.AlarmSeverityEnum alarmSeverity = 13;
  void clear_alarmseverity();
  static const int kAlarmSeverityFieldNumber = 13;
  ::proto::AlarmData_AlarmSeverityEnum alarmseverity() const;
  void set_alarmseverity(::proto::AlarmData_AlarmSeverityEnum value);

  // .proto.AlarmData.AlarmTypeEnum alarmType = 15;
  void clear_alarmtype();
  static const int kAlarmTypeFieldNumber = 15;
  ::proto::AlarmData_AlarmTypeEnum alarmtype() const;
  void set_alarmtype(::proto::AlarmData_AlarmTypeEnum value);

  // @@protoc_insertion_point(class_scope:proto.AlarmData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr alarmprobablecause_;
  ::google::protobuf::internal::ArenaStringPtr alarmspecificreason_;
  ::google::protobuf::internal::ArenaStringPtr alarmentityinstance_;
  ::google::protobuf::internal::ArenaStringPtr alarmoccurtime_;
  ::google::protobuf::internal::ArenaStringPtr alarmmessage_;
  ::google::protobuf::internal::ArenaStringPtr alarmentitytypestr_;
  ::google::protobuf::internal::ArenaStringPtr alarmseveritystr_;
  ::google::protobuf::internal::ArenaStringPtr alarmtypestr_;
  int op_type_;
  ::google::protobuf::int32 alarmseqno_;
  ::google::protobuf::int32 alarmprobablecausecode_;
  ::google::protobuf::int32 alarmspecificreasoncode_;
  int apptypecode_;
  int alarmentitytype_;
  int alarmseverity_;
  int alarmtype_;
  mutable int _cached_size_;
  friend struct protobuf_Alarm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AlarmResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AlarmResponse) */ {
 public:
  AlarmResponse();
  virtual ~AlarmResponse();

  AlarmResponse(const AlarmResponse& from);

  inline AlarmResponse& operator=(const AlarmResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AlarmResponse(AlarmResponse&& from) noexcept
    : AlarmResponse() {
    *this = ::std::move(from);
  }

  inline AlarmResponse& operator=(AlarmResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmResponse& default_instance();

  static inline const AlarmResponse* internal_default_instance() {
    return reinterpret_cast<const AlarmResponse*>(
               &_AlarmResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(AlarmResponse* other);
  friend void swap(AlarmResponse& a, AlarmResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AlarmResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  AlarmResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AlarmResponse& from);
  void MergeFrom(const AlarmResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AlarmResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.CommonResponse res = 1;
  bool has_res() const;
  void clear_res();
  static const int kResFieldNumber = 1;
  const ::proto::CommonResponse& res() const;
  ::proto::CommonResponse* mutable_res();
  ::proto::CommonResponse* release_res();
  void set_allocated_res(::proto::CommonResponse* res);

  // @@protoc_insertion_point(class_scope:proto.AlarmResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::CommonResponse* res_;
  mutable int _cached_size_;
  friend struct protobuf_Alarm_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AlarmData

// .proto.AlarmData.ALARM_OP_TYPE op_type = 1;
inline void AlarmData::clear_op_type() {
  op_type_ = 0;
}
inline ::proto::AlarmData_ALARM_OP_TYPE AlarmData::op_type() const {
  // @@protoc_insertion_point(field_get:proto.AlarmData.op_type)
  return static_cast< ::proto::AlarmData_ALARM_OP_TYPE >(op_type_);
}
inline void AlarmData::set_op_type(::proto::AlarmData_ALARM_OP_TYPE value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AlarmData.op_type)
}

// int32 alarmSeqNo = 2;
inline void AlarmData::clear_alarmseqno() {
  alarmseqno_ = 0;
}
inline ::google::protobuf::int32 AlarmData::alarmseqno() const {
  // @@protoc_insertion_point(field_get:proto.AlarmData.alarmSeqNo)
  return alarmseqno_;
}
inline void AlarmData::set_alarmseqno(::google::protobuf::int32 value) {
  
  alarmseqno_ = value;
  // @@protoc_insertion_point(field_set:proto.AlarmData.alarmSeqNo)
}

// string alarmProbableCause = 3;
inline void AlarmData::clear_alarmprobablecause() {
  alarmprobablecause_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlarmData::alarmprobablecause() const {
  // @@protoc_insertion_point(field_get:proto.AlarmData.alarmProbableCause)
  return alarmprobablecause_.GetNoArena();
}
inline void AlarmData::set_alarmprobablecause(const ::std::string& value) {
  
  alarmprobablecause_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AlarmData.alarmProbableCause)
}
#if LANG_CXX11
inline void AlarmData::set_alarmprobablecause(::std::string&& value) {
  
  alarmprobablecause_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AlarmData.alarmProbableCause)
}
#endif
inline void AlarmData::set_alarmprobablecause(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  alarmprobablecause_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AlarmData.alarmProbableCause)
}
inline void AlarmData::set_alarmprobablecause(const char* value, size_t size) {
  
  alarmprobablecause_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AlarmData.alarmProbableCause)
}
inline ::std::string* AlarmData::mutable_alarmprobablecause() {
  
  // @@protoc_insertion_point(field_mutable:proto.AlarmData.alarmProbableCause)
  return alarmprobablecause_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlarmData::release_alarmprobablecause() {
  // @@protoc_insertion_point(field_release:proto.AlarmData.alarmProbableCause)
  
  return alarmprobablecause_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlarmData::set_allocated_alarmprobablecause(::std::string* alarmprobablecause) {
  if (alarmprobablecause != NULL) {
    
  } else {
    
  }
  alarmprobablecause_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alarmprobablecause);
  // @@protoc_insertion_point(field_set_allocated:proto.AlarmData.alarmProbableCause)
}

// int32 alarmProbableCauseCode = 4;
inline void AlarmData::clear_alarmprobablecausecode() {
  alarmprobablecausecode_ = 0;
}
inline ::google::protobuf::int32 AlarmData::alarmprobablecausecode() const {
  // @@protoc_insertion_point(field_get:proto.AlarmData.alarmProbableCauseCode)
  return alarmprobablecausecode_;
}
inline void AlarmData::set_alarmprobablecausecode(::google::protobuf::int32 value) {
  
  alarmprobablecausecode_ = value;
  // @@protoc_insertion_point(field_set:proto.AlarmData.alarmProbableCauseCode)
}

// string alarmSpecificReason = 5;
inline void AlarmData::clear_alarmspecificreason() {
  alarmspecificreason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlarmData::alarmspecificreason() const {
  // @@protoc_insertion_point(field_get:proto.AlarmData.alarmSpecificReason)
  return alarmspecificreason_.GetNoArena();
}
inline void AlarmData::set_alarmspecificreason(const ::std::string& value) {
  
  alarmspecificreason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AlarmData.alarmSpecificReason)
}
#if LANG_CXX11
inline void AlarmData::set_alarmspecificreason(::std::string&& value) {
  
  alarmspecificreason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AlarmData.alarmSpecificReason)
}
#endif
inline void AlarmData::set_alarmspecificreason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  alarmspecificreason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AlarmData.alarmSpecificReason)
}
inline void AlarmData::set_alarmspecificreason(const char* value, size_t size) {
  
  alarmspecificreason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AlarmData.alarmSpecificReason)
}
inline ::std::string* AlarmData::mutable_alarmspecificreason() {
  
  // @@protoc_insertion_point(field_mutable:proto.AlarmData.alarmSpecificReason)
  return alarmspecificreason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlarmData::release_alarmspecificreason() {
  // @@protoc_insertion_point(field_release:proto.AlarmData.alarmSpecificReason)
  
  return alarmspecificreason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlarmData::set_allocated_alarmspecificreason(::std::string* alarmspecificreason) {
  if (alarmspecificreason != NULL) {
    
  } else {
    
  }
  alarmspecificreason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alarmspecificreason);
  // @@protoc_insertion_point(field_set_allocated:proto.AlarmData.alarmSpecificReason)
}

// int32 alarmSpecificReasonCode = 6;
inline void AlarmData::clear_alarmspecificreasoncode() {
  alarmspecificreasoncode_ = 0;
}
inline ::google::protobuf::int32 AlarmData::alarmspecificreasoncode() const {
  // @@protoc_insertion_point(field_get:proto.AlarmData.alarmSpecificReasonCode)
  return alarmspecificreasoncode_;
}
inline void AlarmData::set_alarmspecificreasoncode(::google::protobuf::int32 value) {
  
  alarmspecificreasoncode_ = value;
  // @@protoc_insertion_point(field_set:proto.AlarmData.alarmSpecificReasonCode)
}

// string alarmEntityInstance = 7;
inline void AlarmData::clear_alarmentityinstance() {
  alarmentityinstance_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlarmData::alarmentityinstance() const {
  // @@protoc_insertion_point(field_get:proto.AlarmData.alarmEntityInstance)
  return alarmentityinstance_.GetNoArena();
}
inline void AlarmData::set_alarmentityinstance(const ::std::string& value) {
  
  alarmentityinstance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AlarmData.alarmEntityInstance)
}
#if LANG_CXX11
inline void AlarmData::set_alarmentityinstance(::std::string&& value) {
  
  alarmentityinstance_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AlarmData.alarmEntityInstance)
}
#endif
inline void AlarmData::set_alarmentityinstance(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  alarmentityinstance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AlarmData.alarmEntityInstance)
}
inline void AlarmData::set_alarmentityinstance(const char* value, size_t size) {
  
  alarmentityinstance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AlarmData.alarmEntityInstance)
}
inline ::std::string* AlarmData::mutable_alarmentityinstance() {
  
  // @@protoc_insertion_point(field_mutable:proto.AlarmData.alarmEntityInstance)
  return alarmentityinstance_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlarmData::release_alarmentityinstance() {
  // @@protoc_insertion_point(field_release:proto.AlarmData.alarmEntityInstance)
  
  return alarmentityinstance_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlarmData::set_allocated_alarmentityinstance(::std::string* alarmentityinstance) {
  if (alarmentityinstance != NULL) {
    
  } else {
    
  }
  alarmentityinstance_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alarmentityinstance);
  // @@protoc_insertion_point(field_set_allocated:proto.AlarmData.alarmEntityInstance)
}

// .proto.EnumDefineData.AppTypeEnum appTypeCode = 8;
inline void AlarmData::clear_apptypecode() {
  apptypecode_ = 0;
}
inline ::proto::EnumDefineData_AppTypeEnum AlarmData::apptypecode() const {
  // @@protoc_insertion_point(field_get:proto.AlarmData.appTypeCode)
  return static_cast< ::proto::EnumDefineData_AppTypeEnum >(apptypecode_);
}
inline void AlarmData::set_apptypecode(::proto::EnumDefineData_AppTypeEnum value) {
  
  apptypecode_ = value;
  // @@protoc_insertion_point(field_set:proto.AlarmData.appTypeCode)
}

// string alarmOccurTime = 9;
inline void AlarmData::clear_alarmoccurtime() {
  alarmoccurtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlarmData::alarmoccurtime() const {
  // @@protoc_insertion_point(field_get:proto.AlarmData.alarmOccurTime)
  return alarmoccurtime_.GetNoArena();
}
inline void AlarmData::set_alarmoccurtime(const ::std::string& value) {
  
  alarmoccurtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AlarmData.alarmOccurTime)
}
#if LANG_CXX11
inline void AlarmData::set_alarmoccurtime(::std::string&& value) {
  
  alarmoccurtime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AlarmData.alarmOccurTime)
}
#endif
inline void AlarmData::set_alarmoccurtime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  alarmoccurtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AlarmData.alarmOccurTime)
}
inline void AlarmData::set_alarmoccurtime(const char* value, size_t size) {
  
  alarmoccurtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AlarmData.alarmOccurTime)
}
inline ::std::string* AlarmData::mutable_alarmoccurtime() {
  
  // @@protoc_insertion_point(field_mutable:proto.AlarmData.alarmOccurTime)
  return alarmoccurtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlarmData::release_alarmoccurtime() {
  // @@protoc_insertion_point(field_release:proto.AlarmData.alarmOccurTime)
  
  return alarmoccurtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlarmData::set_allocated_alarmoccurtime(::std::string* alarmoccurtime) {
  if (alarmoccurtime != NULL) {
    
  } else {
    
  }
  alarmoccurtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alarmoccurtime);
  // @@protoc_insertion_point(field_set_allocated:proto.AlarmData.alarmOccurTime)
}

// string alarmMessage = 10;
inline void AlarmData::clear_alarmmessage() {
  alarmmessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlarmData::alarmmessage() const {
  // @@protoc_insertion_point(field_get:proto.AlarmData.alarmMessage)
  return alarmmessage_.GetNoArena();
}
inline void AlarmData::set_alarmmessage(const ::std::string& value) {
  
  alarmmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AlarmData.alarmMessage)
}
#if LANG_CXX11
inline void AlarmData::set_alarmmessage(::std::string&& value) {
  
  alarmmessage_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AlarmData.alarmMessage)
}
#endif
inline void AlarmData::set_alarmmessage(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  alarmmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AlarmData.alarmMessage)
}
inline void AlarmData::set_alarmmessage(const char* value, size_t size) {
  
  alarmmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AlarmData.alarmMessage)
}
inline ::std::string* AlarmData::mutable_alarmmessage() {
  
  // @@protoc_insertion_point(field_mutable:proto.AlarmData.alarmMessage)
  return alarmmessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlarmData::release_alarmmessage() {
  // @@protoc_insertion_point(field_release:proto.AlarmData.alarmMessage)
  
  return alarmmessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlarmData::set_allocated_alarmmessage(::std::string* alarmmessage) {
  if (alarmmessage != NULL) {
    
  } else {
    
  }
  alarmmessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alarmmessage);
  // @@protoc_insertion_point(field_set_allocated:proto.AlarmData.alarmMessage)
}

// .proto.AlarmData.AlarmEntityTypeEnum alarmEntityType = 11;
inline void AlarmData::clear_alarmentitytype() {
  alarmentitytype_ = 0;
}
inline ::proto::AlarmData_AlarmEntityTypeEnum AlarmData::alarmentitytype() const {
  // @@protoc_insertion_point(field_get:proto.AlarmData.alarmEntityType)
  return static_cast< ::proto::AlarmData_AlarmEntityTypeEnum >(alarmentitytype_);
}
inline void AlarmData::set_alarmentitytype(::proto::AlarmData_AlarmEntityTypeEnum value) {
  
  alarmentitytype_ = value;
  // @@protoc_insertion_point(field_set:proto.AlarmData.alarmEntityType)
}

// string alarmEntityTypeStr = 12;
inline void AlarmData::clear_alarmentitytypestr() {
  alarmentitytypestr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlarmData::alarmentitytypestr() const {
  // @@protoc_insertion_point(field_get:proto.AlarmData.alarmEntityTypeStr)
  return alarmentitytypestr_.GetNoArena();
}
inline void AlarmData::set_alarmentitytypestr(const ::std::string& value) {
  
  alarmentitytypestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AlarmData.alarmEntityTypeStr)
}
#if LANG_CXX11
inline void AlarmData::set_alarmentitytypestr(::std::string&& value) {
  
  alarmentitytypestr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AlarmData.alarmEntityTypeStr)
}
#endif
inline void AlarmData::set_alarmentitytypestr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  alarmentitytypestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AlarmData.alarmEntityTypeStr)
}
inline void AlarmData::set_alarmentitytypestr(const char* value, size_t size) {
  
  alarmentitytypestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AlarmData.alarmEntityTypeStr)
}
inline ::std::string* AlarmData::mutable_alarmentitytypestr() {
  
  // @@protoc_insertion_point(field_mutable:proto.AlarmData.alarmEntityTypeStr)
  return alarmentitytypestr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlarmData::release_alarmentitytypestr() {
  // @@protoc_insertion_point(field_release:proto.AlarmData.alarmEntityTypeStr)
  
  return alarmentitytypestr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlarmData::set_allocated_alarmentitytypestr(::std::string* alarmentitytypestr) {
  if (alarmentitytypestr != NULL) {
    
  } else {
    
  }
  alarmentitytypestr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alarmentitytypestr);
  // @@protoc_insertion_point(field_set_allocated:proto.AlarmData.alarmEntityTypeStr)
}

// .proto.AlarmData.AlarmSeverityEnum alarmSeverity = 13;
inline void AlarmData::clear_alarmseverity() {
  alarmseverity_ = 0;
}
inline ::proto::AlarmData_AlarmSeverityEnum AlarmData::alarmseverity() const {
  // @@protoc_insertion_point(field_get:proto.AlarmData.alarmSeverity)
  return static_cast< ::proto::AlarmData_AlarmSeverityEnum >(alarmseverity_);
}
inline void AlarmData::set_alarmseverity(::proto::AlarmData_AlarmSeverityEnum value) {
  
  alarmseverity_ = value;
  // @@protoc_insertion_point(field_set:proto.AlarmData.alarmSeverity)
}

// string alarmSeverityStr = 14;
inline void AlarmData::clear_alarmseveritystr() {
  alarmseveritystr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlarmData::alarmseveritystr() const {
  // @@protoc_insertion_point(field_get:proto.AlarmData.alarmSeverityStr)
  return alarmseveritystr_.GetNoArena();
}
inline void AlarmData::set_alarmseveritystr(const ::std::string& value) {
  
  alarmseveritystr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AlarmData.alarmSeverityStr)
}
#if LANG_CXX11
inline void AlarmData::set_alarmseveritystr(::std::string&& value) {
  
  alarmseveritystr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AlarmData.alarmSeverityStr)
}
#endif
inline void AlarmData::set_alarmseveritystr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  alarmseveritystr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AlarmData.alarmSeverityStr)
}
inline void AlarmData::set_alarmseveritystr(const char* value, size_t size) {
  
  alarmseveritystr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AlarmData.alarmSeverityStr)
}
inline ::std::string* AlarmData::mutable_alarmseveritystr() {
  
  // @@protoc_insertion_point(field_mutable:proto.AlarmData.alarmSeverityStr)
  return alarmseveritystr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlarmData::release_alarmseveritystr() {
  // @@protoc_insertion_point(field_release:proto.AlarmData.alarmSeverityStr)
  
  return alarmseveritystr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlarmData::set_allocated_alarmseveritystr(::std::string* alarmseveritystr) {
  if (alarmseveritystr != NULL) {
    
  } else {
    
  }
  alarmseveritystr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alarmseveritystr);
  // @@protoc_insertion_point(field_set_allocated:proto.AlarmData.alarmSeverityStr)
}

// .proto.AlarmData.AlarmTypeEnum alarmType = 15;
inline void AlarmData::clear_alarmtype() {
  alarmtype_ = 0;
}
inline ::proto::AlarmData_AlarmTypeEnum AlarmData::alarmtype() const {
  // @@protoc_insertion_point(field_get:proto.AlarmData.alarmType)
  return static_cast< ::proto::AlarmData_AlarmTypeEnum >(alarmtype_);
}
inline void AlarmData::set_alarmtype(::proto::AlarmData_AlarmTypeEnum value) {
  
  alarmtype_ = value;
  // @@protoc_insertion_point(field_set:proto.AlarmData.alarmType)
}

// string alarmTypeStr = 16;
inline void AlarmData::clear_alarmtypestr() {
  alarmtypestr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlarmData::alarmtypestr() const {
  // @@protoc_insertion_point(field_get:proto.AlarmData.alarmTypeStr)
  return alarmtypestr_.GetNoArena();
}
inline void AlarmData::set_alarmtypestr(const ::std::string& value) {
  
  alarmtypestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AlarmData.alarmTypeStr)
}
#if LANG_CXX11
inline void AlarmData::set_alarmtypestr(::std::string&& value) {
  
  alarmtypestr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AlarmData.alarmTypeStr)
}
#endif
inline void AlarmData::set_alarmtypestr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  alarmtypestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AlarmData.alarmTypeStr)
}
inline void AlarmData::set_alarmtypestr(const char* value, size_t size) {
  
  alarmtypestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AlarmData.alarmTypeStr)
}
inline ::std::string* AlarmData::mutable_alarmtypestr() {
  
  // @@protoc_insertion_point(field_mutable:proto.AlarmData.alarmTypeStr)
  return alarmtypestr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlarmData::release_alarmtypestr() {
  // @@protoc_insertion_point(field_release:proto.AlarmData.alarmTypeStr)
  
  return alarmtypestr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlarmData::set_allocated_alarmtypestr(::std::string* alarmtypestr) {
  if (alarmtypestr != NULL) {
    
  } else {
    
  }
  alarmtypestr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alarmtypestr);
  // @@protoc_insertion_point(field_set_allocated:proto.AlarmData.alarmTypeStr)
}

// -------------------------------------------------------------------

// AlarmResponse

// .proto.CommonResponse res = 1;
inline bool AlarmResponse::has_res() const {
  return this != internal_default_instance() && res_ != NULL;
}
inline void AlarmResponse::clear_res() {
  if (GetArenaNoVirtual() == NULL && res_ != NULL) delete res_;
  res_ = NULL;
}
inline const ::proto::CommonResponse& AlarmResponse::res() const {
  const ::proto::CommonResponse* p = res_;
  // @@protoc_insertion_point(field_get:proto.AlarmResponse.res)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CommonResponse*>(
      &::proto::_CommonResponse_default_instance_);
}
inline ::proto::CommonResponse* AlarmResponse::mutable_res() {
  
  if (res_ == NULL) {
    res_ = new ::proto::CommonResponse;
  }
  // @@protoc_insertion_point(field_mutable:proto.AlarmResponse.res)
  return res_;
}
inline ::proto::CommonResponse* AlarmResponse::release_res() {
  // @@protoc_insertion_point(field_release:proto.AlarmResponse.res)
  
  ::proto::CommonResponse* temp = res_;
  res_ = NULL;
  return temp;
}
inline void AlarmResponse::set_allocated_res(::proto::CommonResponse* res) {
  delete res_;
  res_ = res;
  if (res) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AlarmResponse.res)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::AlarmData_ALARM_OP_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AlarmData_ALARM_OP_TYPE>() {
  return ::proto::AlarmData_ALARM_OP_TYPE_descriptor();
}
template <> struct is_proto_enum< ::proto::AlarmData_AlarmEntityTypeEnum> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AlarmData_AlarmEntityTypeEnum>() {
  return ::proto::AlarmData_AlarmEntityTypeEnum_descriptor();
}
template <> struct is_proto_enum< ::proto::AlarmData_AlarmSeverityEnum> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AlarmData_AlarmSeverityEnum>() {
  return ::proto::AlarmData_AlarmSeverityEnum_descriptor();
}
template <> struct is_proto_enum< ::proto::AlarmData_AlarmTypeEnum> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AlarmData_AlarmTypeEnum>() {
  return ::proto::AlarmData_AlarmTypeEnum_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Alarm_2eproto__INCLUDED
